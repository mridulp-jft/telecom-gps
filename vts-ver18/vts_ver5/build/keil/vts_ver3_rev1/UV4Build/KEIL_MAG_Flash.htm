<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\UV4Build\KEIL_MAG_Flash.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\UV4Build\KEIL_MAG_Flash.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Tue Aug 04 18:54:28 2015
<BR><P>
<H3>Maximum Stack Usage =        124 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; delay &rArr; accel_read &rArr; angle_calculation &rArr; median
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[29]">asin</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[15]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[16]">CMP0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[1f]">DAC0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[6]">DMA0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[7]">DMA1_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[8]">DMA2_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[9]">DMA3_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[b]">FTFA_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[e]">I2C0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[f]">I2C1_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[1d]">I2S0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[d]">LLW_IRQHandler</a> from llwu.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[22]">LPTimer_IRQHandler</a> from vts_ver2.o(.text) referenced from startup_mkl26z4.o(.text)
 <LI><a href="#[22]">LPTimer_IRQHandler</a> from vts_ver2.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[c]">LVD_LVW_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[21]">MCG_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from nmi_isr_handler.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[1c]">PIT_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[24]">PORTA_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[25]">PORTD_IRQHandler</a> from vts_ver2.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[1b]">RTC_Seconds_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[a]">Reserved20_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[23]">Reserved45_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_mkl26z4.o(.text) referenced from startup_mkl26z4.o(.text)
 <LI><a href="#[17]">TPM0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[18]">TPM1_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[19]">TPM2_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[20]">TSI0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from uart.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from uart.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[1e]">USB0_IRQHandler</a> from startup_mkl26z4.o(.text) referenced from startup_mkl26z4.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mkl26z4.o(.text)
 <LI><a href="#[2b]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[29]">asin</a> from asin.o(.constdata) referenced from vts_ver2.o(.text)
 <LI><a href="#[2a]">fputc</a> from retarget.o(.text) referenced from printfa.o(i.__0printf)
 <LI><a href="#[26]">main</a> from vts_ver2.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b4]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[bd]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[be]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[bf]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[c0]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[c1]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[53]"></a>median</STRONG> (Thumb, 120 bytes, Stack size 52 bytes, median.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = median
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;angle_calculation
</UL>

<P><STRONG><a name="[2e]"></a>sqrt_16</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, sqrt16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sqrt_16 &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;angle_calculation
</UL>

<P><STRONG><a name="[30]"></a>in_char</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_getchar
</UL>

<P><STRONG><a name="[32]"></a>in_char1</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar
</UL>

<P><STRONG><a name="[34]"></a>in_char2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpsdata
</UL>

<P><STRONG><a name="[35]"></a>out_char</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
</UL>

<P><STRONG><a name="[37]"></a>out_char1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>

<P><STRONG><a name="[39]"></a>out_char2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>

<P><STRONG><a name="[3a]"></a>char_present</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_getchar_present
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, nmi_isr_handler.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>enable_NMI_button</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nmi_isr_handler.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>sysinit</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, sysinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sysinit &rArr; uart0_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[c3]"></a>enable_abort_button</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysinit.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>clk_out_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sysinit.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2S0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>Reserved45_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TPM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TPM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SER_PutChar</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, serial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SER_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[41]"></a>SER_GetChar</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, serial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_getchar
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[c6]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[42]"></a>detect_motion</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = detect_motion
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
</UL>

<P><STRONG><a name="[50]"></a>i2c_read_byte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>

<P><STRONG><a name="[46]"></a>i2c_set_rx_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
</UL>

<P><STRONG><a name="[45]"></a>i2c_set_slave_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
</UL>

<P><STRONG><a name="[44]"></a>i2c_stop</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_set_slave_mode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_set_rx_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_write_reg
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>

<P><STRONG><a name="[4c]"></a>i2c_wait</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_write_reg
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>

<P><STRONG><a name="[4f]"></a>i2c_give_nack</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>

<P><STRONG><a name="[4d]"></a>i2c_get_ack</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_write_reg
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>

<P><STRONG><a name="[4b]"></a>i2c_write_byte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_write_reg
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>

<P><STRONG><a name="[4e]"></a>i2c_repeated_start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>

<P><STRONG><a name="[49]"></a>i2c_set_tx_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start
</UL>

<P><STRONG><a name="[48]"></a>i2c_set_master_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start
</UL>

<P><STRONG><a name="[47]"></a>i2c_start</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_start
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_set_master_mode
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_set_tx_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_write_reg
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>

<P><STRONG><a name="[4a]"></a>hal_dev_mma8451_read_reg</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hal_dev_mma8451_read_reg &rArr; i2c_start
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_repeated_start
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_get_ack
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_give_nack
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_set_rx_mode
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_byte
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
</UL>

<P><STRONG><a name="[55]"></a>detect_fall_detection</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
</UL>

<P><STRONG><a name="[52]"></a>angle_calculation</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = angle_calculation &rArr; median
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt_16
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
</UL>

<P><STRONG><a name="[54]"></a>accel_read</STRONG> (Thumb, 532 bytes, Stack size 40 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = accel_read &rArr; angle_calculation &rArr; median
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;angle_calculation
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_fall_detection
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_caliberate_accelerometer
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
</UL>

<P><STRONG><a name="[5b]"></a>clear</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_imei
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
</UL>

<P><STRONG><a name="[57]"></a>send_modem</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization2
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
</UL>

<P><STRONG><a name="[59]"></a>send_GSM</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_modem
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_motion
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_cind
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_gps_sleep
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_interval
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ip_port
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
</UL>

<P><STRONG><a name="[5d]"></a>log_it</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_motion
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
</UL>

<P><STRONG><a name="[5f]"></a>save_ip_port</STRONG> (Thumb, 322 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_modem
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
</UL>

<P><STRONG><a name="[60]"></a>delay</STRONG> (Thumb, 414 bytes, Stack size 8 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = delay &rArr; accel_read &rArr; angle_calculation &rArr; median
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_motion
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization2
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_gsm
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_g
</UL>

<P><STRONG><a name="[61]"></a>parse_g</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_cind
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_interval
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ip_port
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
</UL>

<P><STRONG><a name="[63]"></a>send_message</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
</UL>

<P><STRONG><a name="[64]"></a>save_interval</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_modem
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
</UL>

<P><STRONG><a name="[67]"></a>myAtoi</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_interval
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
</UL>

<P><STRONG><a name="[65]"></a>parse_gsm</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
</UL>

<P><STRONG><a name="[66]"></a>msg_sim800</STRONG> (Thumb, 3260 bytes, Stack size 24 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_gsm
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAtoi
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_g
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
</UL>

<P><STRONG><a name="[69]"></a>stof</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
</UL>

<P><STRONG><a name="[6e]"></a>parse</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
</UL>

<P><STRONG><a name="[70]"></a>clear2</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GPS
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpsdata
</UL>

<P><STRONG><a name="[6f]"></a>get_gpsdata</STRONG> (Thumb, 328 bytes, Stack size 8 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_char2
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear2
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
</UL>

<P><STRONG><a name="[71]"></a>GPS_COLLECT</STRONG> (Thumb, 724 bytes, Stack size 88 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpsdata
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_motion
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
</UL>

<P><STRONG><a name="[7b]"></a>tcp_initialization</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_modem
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
</UL>

<P><STRONG><a name="[7c]"></a>send_tcp</STRONG> (Thumb, 672 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_motion
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[7d]"></a>read_ip_port</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_g
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[7e]"></a>read_interval</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAtoi
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_g
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[7f]"></a>read</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar_present
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>

<P><STRONG><a name="[81]"></a>read2</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar_present
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GPS
</UL>

<P><STRONG><a name="[82]"></a>send_modem2</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GPS
</UL>

<P><STRONG><a name="[83]"></a>send_GPS</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_modem2
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read2
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[84]"></a>send_chunk</STRONG> (Thumb, 938 bytes, Stack size 40 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_g
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_motion
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_gps_sleep
</UL>

<P><STRONG><a name="[86]"></a>gsm_gps_sleep</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[88]"></a>hal_i2c_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_init
</UL>

<P><STRONG><a name="[87]"></a>hal_dev_mma8451_init</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = hal_dev_mma8451_init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_init
</UL>

<P><STRONG><a name="[89]"></a>hal_dev_mma8451_write_reg</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hal_dev_mma8451_write_reg &rArr; i2c_start
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_get_ack
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_init
</UL>

<P><STRONG><a name="[c8]"></a>i2c_give_ack</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vts_ver2.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>hal_i2c_deinit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, vts_ver2.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>accel_init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = accel_init &rArr; hal_dev_mma8451_write_reg &rArr; i2c_start
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_write_reg
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>RELAY_init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>LED_init</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>SW1_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>LED_state</STRONG> (Thumb, 300 bytes, Stack size 4 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LED_state &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTD_IRQHandler
</UL>

<P><STRONG><a name="[25]"></a>PORTD_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PORTD_IRQHandler &rArr; LED_state &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>PORTC_action</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, vts_ver2.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>systick_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>systick_disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, vts_ver2.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>cal_systick_read_overhead</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[cc]"></a>remove_all_chars</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, vts_ver2.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>delay2</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, vts_ver2.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>get_imei</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[8f]"></a>bat_cind</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_g
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[90]"></a>loop</STRONG> (Thumb, 780 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_cind
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_imei
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_g
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[91]"></a>auto_caliberate_accelerometer</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
</UL>

<P><STRONG><a name="[92]"></a>tcp_initialization2</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, vts_ver2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_modem
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = main &rArr; delay &rArr; accel_read &rArr; angle_calculation &rArr; median
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SW1_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ce]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, vts_ver2.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mkl26z4.o(RESET)
<LI> startup_mkl26z4.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stdlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[9a]"></a>isalnum</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stdlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[9b]"></a>isdigit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stdlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[9c]"></a>isupper</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stdlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[cf]"></a>strcasecmp</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stdlib.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>strncasecmp</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, stdlib.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>strtoul</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, stdlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isupper
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isdigit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isalnum
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[58]"></a>strlen</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stdlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_imei
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GPS
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_g
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_modem
</UL>

<P><STRONG><a name="[7a]"></a>strcat</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, stdlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
</UL>

<P><STRONG><a name="[9d]"></a>strncat</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, stdlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[d1]"></a>strcpy</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stdlib.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>strncpy</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stdlib.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>strcmp</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, stdlib.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>strncmp</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stdlib.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>memcpy</STRONG> (Thumb, 78 bytes, Stack size 36 bytes, stdlib.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>memset</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stdlib.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>cpu_identify</STRONG> (Thumb, 492 bytes, Stack size 8 bytes, start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cpu_identify &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[93]"></a>start</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = start &rArr; sysinit &rArr; uart0_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outSRS
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_identify
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>flash_identify</STRONG> (Thumb, 1120 bytes, Stack size 8 bytes, start.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, system_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 322 bytes, Stack size 16 bytes, system_mkl26z4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[a2]"></a>llwu_configure</STRONG> (Thumb, 522 bytes, Stack size 24 bytes, llwu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[a3]"></a>llwu_configure_filter</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, llwu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[d]"></a>LLW_IRQHandler</STRONG> (Thumb, 828 bytes, Stack size 0 bytes, llwu.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>outSRS</STRONG> (Thumb, 376 bytes, Stack size 8 bytes, rcm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = outSRS &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[3f]"></a>uart_init</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = uart_init &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[80]"></a>uart_getchar_present</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar_present
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>uart_getchar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_char1
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_char2
</UL>

<P><STRONG><a name="[38]"></a>uart_putchar</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_char2
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_char1
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_modem2
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_modem
</UL>

<P><STRONG><a name="[3e]"></a>uart0_init</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = uart0_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[31]"></a>uart0_getchar</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_char
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_GetChar
</UL>

<P><STRONG><a name="[36]"></a>uart0_putchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_char
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
</UL>

<P><STRONG><a name="[3b]"></a>uart0_getchar_present</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_present
</UL>

<P><STRONG><a name="[2a]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fputc &rArr; SER_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[a4]"></a>fgetc</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_GetChar
</UL>

<P><STRONG><a name="[d7]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
</UL>

<P><STRONG><a name="[d8]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt_16
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;angle_calculation
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[da]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
</UL>

<P><STRONG><a name="[db]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
</UL>

<P><STRONG><a name="[dc]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[dd]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_gsm
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_g
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_imei
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GPS
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_interval
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ip_port
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpsdata
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5c]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
</UL>

<P><STRONG><a name="[e0]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_motion
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[e1]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[e2]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[e3]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[a8]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[ae]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ad]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[e4]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e7]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[56]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llwu_configure_filter
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llwu_configure
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outSRS
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_identify
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_identify
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_cind
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_systick_read_overhead
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_gps_sleep
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_interval
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ip_port
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tcp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpsdata
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GSM
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_read
</UL>

<P><STRONG><a name="[e8]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[e9]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[b7]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ea]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[5e]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_gps_sleep
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_chunk
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_interval
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ip_port
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_initialization
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_COLLECT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_sim800
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_interval
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ip_port
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_it
</UL>

<P><STRONG><a name="[eb]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[ec]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[b2]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8c]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, vts_ver2.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_identify
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_cind
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_state
</UL>

<P><STRONG><a name="[ed]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ee]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[29]"></a>asin</STRONG> (ARM, 512 bytes, Stack size unknown bytes, asin.o(.constdata))
<BR>[Address Reference Count : 1]<UL><LI> vts_ver2.o(.text)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[51]"></a>pause</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, vts_ver2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_write_reg
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dev_mma8451_read_reg
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mkl26z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl26z4.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[b6]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[bb]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ba]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2b]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
