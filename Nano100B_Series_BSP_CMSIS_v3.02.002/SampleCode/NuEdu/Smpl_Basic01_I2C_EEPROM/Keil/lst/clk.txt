; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\clk.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\clk.d --feedback=.\obj\Smpl_Basic01_I2C_EEPROM.fed --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\Device\Nuvoton\Nano100Series\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\NuEdu\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DDEBUG_PORT=UART1 --omf_browse=.\obj\clk.crf ..\..\..\..\Library\StdDriver\src\clk.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CLK_DisableCKO PROC
;;;30       */
;;;31     void CLK_DisableCKO(void)
000000  4802              LDR      r0,|L1.12|
;;;32     {
;;;33         /* Disable CKO0 clock source */
;;;34         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6881              LDR      r1,[r0,#8]
000004  2240              MOVS     r2,#0x40
000006  4391              BICS     r1,r1,r2
000008  6081              STR      r1,[r0,#8]
;;;35     }
00000a  4770              BX       lr
;;;36     
                          ENDP

                  |L1.12|
                          DCD      0x50000200

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  CLK_EnableCKO PROC
;;;30       */
;;;31     void CLK_DisableCKO(void)
000000  2210              MOVS     r2,#0x10
;;;32     {
;;;33         /* Disable CKO0 clock source */
;;;34         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  4311              ORRS     r1,r1,r2
000004  4a05              LDR      r2,|L2.28|
000006  6291              STR      r1,[r2,#0x28]
000008  6891              LDR      r1,[r2,#8]
;;;35     }
00000a  2340              MOVS     r3,#0x40
00000c  4319              ORRS     r1,r1,r3
00000e  6091              STR      r1,[r2,#8]
000010  6991              LDR      r1,[r2,#0x18]
000012  230c              MOVS     r3,#0xc
000014  4399              BICS     r1,r1,r3
000016  4301              ORRS     r1,r1,r0
000018  6191              STR      r1,[r2,#0x18]
00001a  4770              BX       lr
;;;36     
                          ENDP

                  |L2.28|
                          DCD      0x50000200

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  CLK_PowerDown PROC
;;;30       */
;;;31     void CLK_DisableCKO(void)
000000  4904              LDR      r1,|L3.20|
;;;32     {
;;;33         /* Disable CKO0 clock source */
;;;34         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  2004              MOVS     r0,#4
000004  6108              STR      r0,[r1,#0x10]
000006  4804              LDR      r0,|L3.24|
000008  6801              LDR      r1,[r0,#0]
;;;35     }
00000a  2250              MOVS     r2,#0x50
00000c  4311              ORRS     r1,r1,r2
00000e  6001              STR      r1,[r0,#0]
000010  bf30              WFI      
000012  4770              BX       lr
;;;36     
                          ENDP

                  |L3.20|
                          DCD      0xe000ed00
                  |L3.24|
                          DCD      0x50000200

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  CLK_Idle PROC
;;;30       */
;;;31     void CLK_DisableCKO(void)
000000  4803              LDR      r0,|L4.16|
;;;32     {
;;;33         /* Disable CKO0 clock source */
;;;34         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6801              LDR      r1,[r0,#0]
000004  2240              MOVS     r2,#0x40
000006  4391              BICS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;35     }
00000a  bf30              WFI      
00000c  4770              BX       lr
;;;36     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      0x50000200

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  CLK_GetHXTFreq PROC
;;;30       */
;;;31     void CLK_DisableCKO(void)
000000  4802              LDR      r0,|L5.12|
;;;32     {
;;;33         /* Disable CKO0 clock source */
;;;34         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6800              LDR      r0,[r0,#0]
000004  07c0              LSLS     r0,r0,#31
000006  d000              BEQ      |L5.10|
000008  4801              LDR      r0,|L5.16|
                  |L5.10|
;;;35     }
00000a  4770              BX       lr
;;;36     
                          ENDP

                  |L5.12|
                          DCD      0x50000200
                  |L5.16|
                          DCD      0x00b71b00

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  CLK_GetLXTFreq PROC
;;;30       */
;;;31     void CLK_DisableCKO(void)
000000  4804              LDR      r0,|L6.20|
;;;32     {
;;;33         /* Disable CKO0 clock source */
;;;34         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6800              LDR      r0,[r0,#0]
000004  0780              LSLS     r0,r0,#30
000006  d502              BPL      |L6.14|
000008  2001              MOVS     r0,#1
;;;35     }
00000a  03c0              LSLS     r0,r0,#15
00000c  4770              BX       lr
                  |L6.14|
00000e  2000              MOVS     r0,#0
000010  4770              BX       lr
;;;36     
                          ENDP

000012  0000              DCW      0x0000
                  |L6.20|
                          DCD      0x50000200

                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  CLK_GetHCLKFreq PROC
;;;30       */
;;;31     void CLK_DisableCKO(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33         /* Disable CKO0 clock source */
;;;34         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  f7fffffe          BL       SystemCoreClockUpdate
000006  4814              LDR      r0,|L7.88|
000008  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
;;;35     }
00000a  bd10              POP      {r4,pc}
;;;36     
                          ENDP

                  CLK_GetPLLClockFreq PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
00000c  b510              PUSH     {r4,lr}
00000e  4813              LDR      r0,|L7.92|
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  6a40              LDR      r0,[r0,#0x24]
000012  03c1              LSLS     r1,r0,#15
000014  d501              BPL      |L7.26|
000016  2000              MOVS     r0,#0
000018  bd10              POP      {r4,pc}
                  |L7.26|
;;;64     }
00001a  04c1              LSLS     r1,r0,#19
00001c  d501              BPL      |L7.34|
00001e  2402              MOVS     r4,#2
000020  e000              B        |L7.36|
                  |L7.34|
000022  2401              MOVS     r4,#1
                  |L7.36|
000024  0581              LSLS     r1,r0,#22
000026  0f89              LSRS     r1,r1,#30
000028  d00f              BEQ      |L7.74|
00002a  2901              CMP      r1,#1
00002c  d00f              BEQ      |L7.78|
00002e  2902              CMP      r1,#2
000030  d00f              BEQ      |L7.82|
000032  2110              MOVS     r1,#0x10
                  |L7.52|
000034  0680              LSLS     r0,r0,#26
000036  0e80              LSRS     r0,r0,#26
000038  4a09              LDR      r2,|L7.96|
00003a  3020              ADDS     r0,r0,#0x20
00003c  4350              MULS     r0,r2,r0
00003e  f7fffffe          BL       __aeabi_uidivmod
000042  4621              MOV      r1,r4
000044  f7fffffe          BL       __aeabi_uidivmod
000048  bd10              POP      {r4,pc}
                  |L7.74|
00004a  2102              MOVS     r1,#2
00004c  e7f2              B        |L7.52|
                  |L7.78|
00004e  2104              MOVS     r1,#4
000050  e7f0              B        |L7.52|
                  |L7.82|
000052  2108              MOVS     r1,#8
000054  e7ee              B        |L7.52|
;;;65     
                          ENDP

000056  0000              DCW      0x0000
                  |L7.88|
                          DCD      SystemCoreClock
                  |L7.92|
                          DCD      0x50000200
                  |L7.96|
                          DCD      0x00b71b00

                          AREA ||area_number.8||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.text||
                  CLK_GetCPUFreq PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  f7fffffe          BL       SystemCoreClockUpdate
000006  4801              LDR      r0,|L8.12|
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00000a  bd10              POP      {r4,pc}
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
;;;64     }
;;;65     
                          ENDP

                  |L8.12|
                          DCD      SystemCoreClock

                          AREA ||area_number.9||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.text||
                  CLK_WaitClockReady PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  4604              MOV      r4,r0
000004  4907              LDR      r1,|L9.36|
000006  4b08              LDR      r3,|L9.40|
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  e005              B        |L9.22|
                  |L9.10|
00000a  460a              MOV      r2,r1
00000c  1e49              SUBS     r1,r1,#1
00000e  2a00              CMP      r2,#0
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  dc01              BGT      |L9.22|
000012  2000              MOVS     r0,#0
000014  bd10              POP      {r4,pc}
                  |L9.22|
000016  68da              LDR      r2,[r3,#0xc]
000018  4620              MOV      r0,r4
;;;64     }
00001a  4390              BICS     r0,r0,r2
00001c  d1f5              BNE      |L9.10|
00001e  2001              MOVS     r0,#1
000020  bd10              POP      {r4,pc}
;;;65     
                          ENDP

000022  0000              DCW      0x0000
                  |L9.36|
                          DCD      0x0000ea60
                  |L9.40|
                          DCD      0x50000200

                          AREA ||area_number.10||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.text||
                  CLK_SetHCLK PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  b5f3              PUSH     {r0,r1,r4-r7,lr}
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  4c11              LDR      r4,|L10.72|
000004  b081              SUB      sp,sp,#4
000006  68e5              LDR      r5,[r4,#0xc]
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  460f              MOV      r7,r1
00000a  2610              MOVS     r6,#0x10
00000c  6820              LDR      r0,[r4,#0]
00000e  4035              ANDS     r5,r5,r6
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  2104              MOVS     r1,#4
000012  4308              ORRS     r0,r0,r1
000014  6020              STR      r0,[r4,#0]
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       CLK_WaitClockReady
;;;64     }
00001c  6920              LDR      r0,[r4,#0x10]
00001e  2107              MOVS     r1,#7
000020  4308              ORRS     r0,r0,r1
000022  6120              STR      r0,[r4,#0x10]
000024  69e0              LDR      r0,[r4,#0x1c]
000026  0900              LSRS     r0,r0,#4
000028  0100              LSLS     r0,r0,#4
00002a  4338              ORRS     r0,r0,r7
00002c  61e0              STR      r0,[r4,#0x1c]
00002e  6920              LDR      r0,[r4,#0x10]
000030  4388              BICS     r0,r0,r1
000032  9901              LDR      r1,[sp,#4]
000034  4308              ORRS     r0,r0,r1
000036  6120              STR      r0,[r4,#0x10]
000038  f7fffffe          BL       SystemCoreClockUpdate
00003c  2d00              CMP      r5,#0
00003e  d102              BNE      |L10.70|
000040  6820              LDR      r0,[r4,#0]
000042  43b0              BICS     r0,r0,r6
000044  6020              STR      r0,[r4,#0]
                  |L10.70|
000046  bdfe              POP      {r1-r7,pc}
;;;65     
                          ENDP

                  |L10.72|
                          DCD      0x50000200

                          AREA ||area_number.11||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.text||
                  CLK_EnablePLL PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  b57f              PUSH     {r0-r6,lr}
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  4a1d              LDR      r2,|L11.120|
000004  460b              MOV      r3,r1
000006  ca36              LDM      r2,{r1,r2,r4,r5}
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  466e              MOV      r6,sp
00000a  c636              STM      r6!,{r1,r2,r4,r5}
00000c  491b              LDR      r1,|L11.124|
00000e  428b              CMP      r3,r1
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  d302              BCC      |L11.24|
000012  491b              LDR      r1,|L11.128|
000014  428b              CMP      r3,r1
000016  d900              BLS      |L11.26|
                  |L11.24|
000018  460b              MOV      r3,r1
                  |L11.26|
;;;64     }
00001a  2401              MOVS     r4,#1
00001c  0464              LSLS     r4,r4,#17
00001e  42a0              CMP      r0,r4
000020  d000              BEQ      |L11.36|
000022  2400              MOVS     r4,#0
                  |L11.36|
000024  4917              LDR      r1,|L11.132|
000026  4618              MOV      r0,r3
000028  f7fffffe          BL       __aeabi_uidivmod
00002c  2103              MOVS     r1,#3
00002e  f7fffffe          BL       __aeabi_uidivmod
000032  0082              LSLS     r2,r0,#2
000034  2010              MOVS     r0,#0x10
000036  e003              B        |L11.64|
                  |L11.56|
000038  0840              LSRS     r0,r0,#1
00003a  0852              LSRS     r2,r2,#1
00003c  2810              CMP      r0,#0x10
00003e  d8fb              BHI      |L11.56|
                  |L11.64|
000040  2a5f              CMP      r2,#0x5f
000042  d8f9              BHI      |L11.56|
000044  2103              MOVS     r1,#3
000046  466b              MOV      r3,sp
                  |L11.72|
000048  008d              LSLS     r5,r1,#2
00004a  595d              LDR      r5,[r3,r5]
00004c  4285              CMP      r5,r0
00004e  d001              BEQ      |L11.84|
000050  1e49              SUBS     r1,r1,#1
000052  d5f9              BPL      |L11.72|
                  |L11.84|
000054  0209              LSLS     r1,r1,#8
000056  4321              ORRS     r1,r1,r4
000058  3a20              SUBS     r2,r2,#0x20
00005a  480b              LDR      r0,|L11.136|
00005c  4311              ORRS     r1,r1,r2
00005e  6241              STR      r1,[r0,#0x24]
000060  6a41              LDR      r1,[r0,#0x24]
000062  01c2              LSLS     r2,r0,#7
000064  4391              BICS     r1,r1,r2
000066  6241              STR      r1,[r0,#0x24]
000068  2004              MOVS     r0,#4
00006a  f7fffffe          BL       CLK_WaitClockReady
00006e  f7fffffe          BL       CLK_GetPLLClockFreq
000072  b004              ADD      sp,sp,#0x10
000074  bd70              POP      {r4-r6,pc}
;;;65     
                          ENDP

000076  0000              DCW      0x0000
                  |L11.120|
                          DCD      ||.constdata||
                  |L11.124|
                          DCD      0x02dc6c00
                  |L11.128|
                          DCD      0x07270e00
                  |L11.132|
                          DCD      0x000f4240
                  |L11.136|
                          DCD      0x50000200

                          AREA ||area_number.12||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.text||
                  CLK_EnableXtalRC PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  4604              MOV      r4,r0
000004  480c              LDR      r0,|L12.56|
000006  6801              LDR      r1,[r0,#0]
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  4321              ORRS     r1,r1,r4
00000a  6001              STR      r1,[r0,#0]
00000c  07e0              LSLS     r0,r4,#31
00000e  d002              BEQ      |L12.22|
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       CLK_WaitClockReady
                  |L12.22|
000016  07a0              LSLS     r0,r4,#30
000018  d502              BPL      |L12.32|
;;;64     }
00001a  2002              MOVS     r0,#2
00001c  f7fffffe          BL       CLK_WaitClockReady
                  |L12.32|
000020  0760              LSLS     r0,r4,#29
000022  d502              BPL      |L12.42|
000024  2010              MOVS     r0,#0x10
000026  f7fffffe          BL       CLK_WaitClockReady
                  |L12.42|
00002a  0720              LSLS     r0,r4,#28
00002c  d502              BPL      |L12.52|
00002e  2008              MOVS     r0,#8
000030  f7fffffe          BL       CLK_WaitClockReady
                  |L12.52|
000034  bd10              POP      {r4,pc}
;;;65     
                          ENDP

000036  0000              DCW      0x0000
                  |L12.56|
                          DCD      0x50000200

                          AREA ||area_number.13||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.text||
                  CLK_SetCoreClock PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  b5f8              PUSH     {r3-r7,lr}
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  4d19              LDR      r5,|L13.104|
000004  68ec              LDR      r4,[r5,#0xc]
000006  2610              MOVS     r6,#0x10
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  4918              LDR      r1,|L13.108|
00000a  4034              ANDS     r4,r4,r6
00000c  4f18              LDR      r7,|L13.112|
00000e  4288              CMP      r0,r1
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  d107              BNE      |L13.34|
000012  2004              MOVS     r0,#4
000014  f7fffffe          BL       CLK_EnableXtalRC
000018  2100              MOVS     r1,#0
;;;64     }
00001a  2007              MOVS     r0,#7
00001c  f7fffffe          BL       CLK_SetHCLK
000020  e01f              B        |L13.98|
                  |L13.34|
000022  4914              LDR      r1,|L13.116|
000024  4288              CMP      r0,r1
000026  d302              BCC      |L13.46|
000028  4913              LDR      r1,|L13.120|
00002a  4288              CMP      r0,r1
00002c  d900              BLS      |L13.48|
                  |L13.46|
00002e  4608              MOV      r0,r1
                  |L13.48|
000030  6829              LDR      r1,[r5,#0]
000032  07c9              LSLS     r1,r1,#31
000034  d004              BEQ      |L13.64|
000036  0041              LSLS     r1,r0,#1
000038  2000              MOVS     r0,#0
00003a  f7fffffe          BL       CLK_EnablePLL
00003e  e006              B        |L13.78|
                  |L13.64|
000040  0041              LSLS     r1,r0,#1
000042  2001              MOVS     r0,#1
000044  0440              LSLS     r0,r0,#17
000046  f7fffffe          BL       CLK_EnablePLL
00004a  68ec              LDR      r4,[r5,#0xc]
00004c  4034              ANDS     r4,r4,r6
                  |L13.78|
00004e  2101              MOVS     r1,#1
000050  2002              MOVS     r0,#2
000052  f7fffffe          BL       CLK_SetHCLK
000056  2c00              CMP      r4,#0
000058  d103              BNE      |L13.98|
00005a  6828              LDR      r0,[r5,#0]
00005c  2104              MOVS     r1,#4
00005e  4388              BICS     r0,r0,r1
000060  6028              STR      r0,[r5,#0]
                  |L13.98|
000062  6838              LDR      r0,[r7,#0]  ; SystemCoreClock
000064  bdf8              POP      {r3-r7,pc}
;;;65     
                          ENDP

000066  0000              DCW      0x0000
                  |L13.104|
                          DCD      0x50000200
                  |L13.108|
                          DCD      0x00b71b00
                  |L13.112|
                          DCD      SystemCoreClock
                  |L13.116|
                          DCD      0x016e3600
                  |L13.120|
                          DCD      0x0280de80

                          AREA ||area_number.14||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.text||
                  CLK_SetModuleClock PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  b570              PUSH     {r4-r6,lr}
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  0a84              LSRS     r4,r0,#10
000004  0623              LSLS     r3,r4,#24
000006  0e1b              LSRS     r3,r3,#24
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  d00c              BEQ      |L14.36|
00000a  0303              LSLS     r3,r0,#12
00000c  0f9b              LSRS     r3,r3,#30
00000e  4d0f              LDR      r5,|L14.76|
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  009b              LSLS     r3,r3,#2
000012  195b              ADDS     r3,r3,r5
000014  681d              LDR      r5,[r3,#0]
000016  0586              LSLS     r6,r0,#22
000018  b2e4              UXTB     r4,r4
;;;64     }
00001a  0ef6              LSRS     r6,r6,#27
00001c  40b4              LSLS     r4,r4,r6
00001e  43a5              BICS     r5,r5,r4
000020  4315              ORRS     r5,r5,r2
000022  601d              STR      r5,[r3,#0]
                  |L14.36|
000024  0e42              LSRS     r2,r0,#25
000026  0712              LSLS     r2,r2,#28
000028  d00e              BEQ      |L14.72|
00002a  0042              LSLS     r2,r0,#1
00002c  4b07              LDR      r3,|L14.76|
00002e  0f92              LSRS     r2,r2,#30
000030  0092              LSLS     r2,r2,#2
000032  3b0c              SUBS     r3,r3,#0xc
000034  18d2              ADDS     r2,r2,r3
000036  6813              LDR      r3,[r2,#0]
000038  00c4              LSLS     r4,r0,#3
00003a  0f24              LSRS     r4,r4,#28
00003c  01c0              LSLS     r0,r0,#7
00003e  0ec0              LSRS     r0,r0,#27
000040  4084              LSLS     r4,r4,r0
000042  43a3              BICS     r3,r3,r4
000044  430b              ORRS     r3,r3,r1
000046  6013              STR      r3,[r2,#0]
                  |L14.72|
000048  bd70              POP      {r4-r6,pc}
;;;65     
                          ENDP

00004a  0000              DCW      0x0000
                  |L14.76|
                          DCD      0x5000021c

                          AREA ||area_number.15||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.text||
                  CLK_DisableXtalRC PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  4902              LDR      r1,|L15.12|
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  680a              LDR      r2,[r1,#0]
000004  4382              BICS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  4770              BX       lr
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
;;;64     }
;;;65     
                          ENDP

00000a  0000              DCW      0x0000
                  |L15.12|
                          DCD      0x50000200

                          AREA ||area_number.16||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.16||, ||.text||
                  CLK_EnableModuleClock PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  0fc1              LSRS     r1,r0,#31
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  008a              LSLS     r2,r1,#2
000004  4904              LDR      r1,|L16.24|
000006  1851              ADDS     r1,r2,r1
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  684a              LDR      r2,[r1,#4]
00000a  06c3              LSLS     r3,r0,#27
00000c  0edb              LSRS     r3,r3,#27
00000e  2001              MOVS     r0,#1
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  4098              LSLS     r0,r0,r3
000012  4302              ORRS     r2,r2,r0
000014  604a              STR      r2,[r1,#4]
000016  4770              BX       lr
;;;64     }
;;;65     
                          ENDP

                  |L16.24|
                          DCD      0x50000200

                          AREA ||area_number.17||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.text||
                  CLK_DisableModuleClock PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  0fc1              LSRS     r1,r0,#31
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  008a              LSLS     r2,r1,#2
000004  4904              LDR      r1,|L17.24|
000006  1851              ADDS     r1,r2,r1
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  684a              LDR      r2,[r1,#4]
00000a  06c3              LSLS     r3,r0,#27
00000c  0edb              LSRS     r3,r3,#27
00000e  2001              MOVS     r0,#1
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  4098              LSLS     r0,r0,r3
000012  4382              BICS     r2,r2,r0
000014  604a              STR      r2,[r1,#4]
000016  4770              BX       lr
;;;64     }
;;;65     
                          ENDP

                  |L17.24|
                          DCD      0x50000200

                          AREA ||area_number.18||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.18||, ||.text||
                  CLK_DisablePLL PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  4802              LDR      r0,|L18.12|
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  6a41              LDR      r1,[r0,#0x24]
000004  01c2              LSLS     r2,r0,#7
000006  4311              ORRS     r1,r1,r2
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  6241              STR      r1,[r0,#0x24]
00000a  4770              BX       lr
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
;;;64     }
;;;65     
                          ENDP

                  |L18.12|
                          DCD      0x50000200

                          AREA ||area_number.19||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.text||
                  CLK_SysTickDelay PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  4906              LDR      r1,|L19.28|
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  6809              LDR      r1,[r1,#0]  ; CyclesPerUs
000004  4348              MULS     r0,r1,r0
000006  4906              LDR      r1,|L19.32|
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  6148              STR      r0,[r1,#0x14]
00000a  2200              MOVS     r2,#0
00000c  618a              STR      r2,[r1,#0x18]
00000e  2005              MOVS     r0,#5
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  6108              STR      r0,[r1,#0x10]
                  |L19.18|
000012  6908              LDR      r0,[r1,#0x10]
000014  03c0              LSLS     r0,r0,#15
000016  d5fc              BPL      |L19.18|
000018  610a              STR      r2,[r1,#0x10]
;;;64     }
00001a  4770              BX       lr
;;;65     
                          ENDP

                  |L19.28|
                          DCD      CyclesPerUs
                  |L19.32|
                          DCD      0xe000e000

                          AREA ||area_number.20||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.20||, ||.text||
                  CLK_EnableSysTick PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  4a09              LDR      r2,|L20.40|
000004  2300              MOVS     r3,#0
000006  6113              STR      r3,[r2,#0x10]
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
000008  2404              MOVS     r4,#4
00000a  2801              CMP      r0,#1
00000c  6910              LDR      r0,[r2,#0x10]
00000e  d008              BEQ      |L20.34|
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000010  43a0              BICS     r0,r0,r4
                  |L20.18|
000012  6110              STR      r0,[r2,#0x10]
000014  6151              STR      r1,[r2,#0x14]
000016  6193              STR      r3,[r2,#0x18]
000018  6910              LDR      r0,[r2,#0x10]
;;;64     }
00001a  2101              MOVS     r1,#1
00001c  4308              ORRS     r0,r0,r1
00001e  6110              STR      r0,[r2,#0x10]
000020  bd10              POP      {r4,pc}
                  |L20.34|
000022  4320              ORRS     r0,r0,r4
000024  e7f5              B        |L20.18|
;;;65     
                          ENDP

000026  0000              DCW      0x0000
                  |L20.40|
                          DCD      0xe000e000

                          AREA ||area_number.21||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.text||
                  CLK_DisableSysTick PROC
;;;53       */
;;;54     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv)
000000  4901              LDR      r1,|L21.8|
;;;55     {
;;;56         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;57         CLK->FRQDIV = CLK_FRQDIV_FDIV_EN_Msk | u32ClkDiv ;
000002  2000              MOVS     r0,#0
000004  6108              STR      r0,[r1,#0x10]
000006  4770              BX       lr
;;;58     
;;;59         /* Enable CKO clock source */
;;;60         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
;;;61     
;;;62         /* Select CKO clock source */
;;;63         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
;;;64     }
;;;65     
                          ENDP

                  |L21.8|
                          DCD      0xe000e000

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      0x00000002
                          DCD      0x00000004
                          DCD      0x00000008
                          DCD      0x00000010

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Library\\StdDriver\\src\\clk.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_clk_c_9b5832dc____REV16|
#line 388 "..\\..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_clk_c_9b5832dc____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_clk_c_9b5832dc____REVSH|
#line 402
|__asm___5_clk_c_9b5832dc____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
