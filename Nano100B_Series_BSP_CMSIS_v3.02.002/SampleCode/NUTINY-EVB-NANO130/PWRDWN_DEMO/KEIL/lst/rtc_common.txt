; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\rtc_common.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\rtc_common.d --feedback=.\obj\PWRDWN_DEMO.fed --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\..\Library\LCDLib\Include -I..\..\..\..\Library\Device\Nuvoton\Nano100Series\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\CMSIS\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=518 --omf_browse=.\obj\rtc_common.crf ..\..\COMMON\RTC_Common.c]
                          THUMB

                          AREA ||i.planNextRTCInterrupt||, CODE, READONLY, ALIGN=2

                  planNextRTCInterrupt PROC
;;;17     
;;;18     void planNextRTCInterrupt(S_RTC_TIME_DATA_T *sCurTime)
000000  b510              PUSH     {r4,lr}
;;;19     {
;;;20         // plan next interrupt timing
;;;21         if(sCurTime->u32Minute < 59)
000002  6941              LDR      r1,[r0,#0x14]
000004  2400              MOVS     r4,#0
;;;22             sCurTime->u32Minute += 1;
;;;23         else {
;;;24             if(sCurTime->u32Hour < 23)
;;;25                 sCurTime->u32Hour += 1;
;;;26             else {  // next day
;;;27                 sCurTime->u32Hour = 0;
;;;28     
;;;29                 // new year first day
;;;30                 if(sCurTime->u32Month==12 && sCurTime->u32Day==31) {
;;;31                     sCurTime->u32Year += 1;
;;;32                     sCurTime->u32Month = 1;
000006  2201              MOVS     r2,#1
000008  293b              CMP      r1,#0x3b              ;21
00000a  d202              BCS      |L1.18|
00000c  1c49              ADDS     r1,r1,#1              ;19
00000e  6141              STR      r1,[r0,#0x14]         ;22
000010  e04a              B        |L1.168|
                  |L1.18|
000012  6901              LDR      r1,[r0,#0x10]         ;24
000014  2917              CMP      r1,#0x17              ;24
000016  d202              BCS      |L1.30|
000018  1c49              ADDS     r1,r1,#1              ;24
00001a  6101              STR      r1,[r0,#0x10]         ;25
00001c  e044              B        |L1.168|
                  |L1.30|
00001e  6104              STR      r4,[r0,#0x10]         ;30
000020  6841              LDR      r1,[r0,#4]            ;30
000022  290c              CMP      r1,#0xc               ;30
000024  d018              BEQ      |L1.88|
;;;33                     sCurTime->u32Day = 1;
;;;34                 } else if(sCurTime->u32Month==1 ||
000026  2901              CMP      r1,#1
000028  d019              BEQ      |L1.94|
;;;35                           sCurTime->u32Month==3 ||
00002a  2903              CMP      r1,#3
00002c  d017              BEQ      |L1.94|
;;;36                           sCurTime->u32Month==5 ||
00002e  2905              CMP      r1,#5
000030  d015              BEQ      |L1.94|
;;;37                           sCurTime->u32Month==7 ||
000032  2907              CMP      r1,#7
000034  d013              BEQ      |L1.94|
;;;38                           sCurTime->u32Month==8 ||
000036  2908              CMP      r1,#8
000038  d011              BEQ      |L1.94|
;;;39                           sCurTime->u32Month==10 ||
00003a  290a              CMP      r1,#0xa
00003c  d00f              BEQ      |L1.94|
;;;40                           sCurTime->u32Month==12) { // 1,3,5,7,8,10,12 31-day month
00003e  290c              CMP      r1,#0xc
000040  d00d              BEQ      |L1.94|
;;;41                     if(sCurTime->u32Day < 31)
;;;42                         sCurTime->u32Day += 1;
;;;43                     else {
;;;44                         sCurTime->u32Day = 1;
;;;45                         sCurTime->u32Month += 1;
;;;46                     }
;;;47                 } else if(sCurTime->u32Month==2) { // 2, 28 or 29-day month
000042  2902              CMP      r1,#2
000044  d015              BEQ      |L1.114|
;;;48                     if(RTC_IS_LEAP_YEAR()) { // leap year
;;;49                         if(sCurTime->u32Day < 29)
;;;50                             sCurTime->u32Day += 1;
;;;51                         else {
;;;52                             sCurTime->u32Day = 1;
;;;53                             sCurTime->u32Month += 1;
;;;54                         }
;;;55                     } else {
;;;56                         if(sCurTime->u32Day < 28)
;;;57                             sCurTime->u32Day += 1;
;;;58                         else {
;;;59                             sCurTime->u32Day = 1;
;;;60                             sCurTime->u32Month += 1;
;;;61                         }
;;;62                     }
;;;63                 } else if(sCurTime->u32Month==4 ||
000046  2904              CMP      r1,#4
000048  d025              BEQ      |L1.150|
;;;64                           sCurTime->u32Month==6 ||
00004a  2906              CMP      r1,#6
00004c  d023              BEQ      |L1.150|
;;;65                           sCurTime->u32Month==9 ||
00004e  2909              CMP      r1,#9
000050  d021              BEQ      |L1.150|
;;;66                           sCurTime->u32Month==11) { // 4,6,9,11 30-day
000052  290b              CMP      r1,#0xb
000054  d01f              BEQ      |L1.150|
000056  e027              B        |L1.168|
                  |L1.88|
000058  6883              LDR      r3,[r0,#8]            ;30
00005a  2b1f              CMP      r3,#0x1f              ;30
00005c  d003              BEQ      |L1.102|
                  |L1.94|
00005e  6883              LDR      r3,[r0,#8]            ;41
000060  2b1f              CMP      r3,#0x1f              ;41
000062  d31b              BCC      |L1.156|
000064  e01d              B        |L1.162|
                  |L1.102|
000066  6801              LDR      r1,[r0,#0]            ;31
000068  1c49              ADDS     r1,r1,#1              ;31
00006a  c006              STM      r0!,{r1,r2}           ;31
00006c  6002              STR      r2,[r0,#0]            ;33
00006e  3808              SUBS     r0,r0,#8              ;33
000070  e01a              B        |L1.168|
                  |L1.114|
000072  4913              LDR      r1,|L1.192|
000074  6a49              LDR      r1,[r1,#0x24]         ;48
000076  2303              MOVS     r3,#3                 ;30
000078  07c9              LSLS     r1,r1,#31             ;48
00007a  2900              CMP      r1,#0                 ;48
00007c  6881              LDR      r1,[r0,#8]            ;48
00007e  d007              BEQ      |L1.144|
000080  291d              CMP      r1,#0x1d              ;49
000082  d202              BCS      |L1.138|
                  |L1.132|
000084  1c49              ADDS     r1,r1,#1              ;49
000086  6081              STR      r1,[r0,#8]            ;50
000088  e00e              B        |L1.168|
                  |L1.138|
00008a  6043              STR      r3,[r0,#4]            ;53
00008c  6082              STR      r2,[r0,#8]            ;53
00008e  e00b              B        |L1.168|
                  |L1.144|
000090  291c              CMP      r1,#0x1c              ;56
000092  d2fa              BCS      |L1.138|
000094  e7f6              B        |L1.132|
                  |L1.150|
;;;67                     if(sCurTime->u32Day < 30)
000096  6883              LDR      r3,[r0,#8]
000098  2b1e              CMP      r3,#0x1e
00009a  d202              BCS      |L1.162|
                  |L1.156|
00009c  1c5b              ADDS     r3,r3,#1
;;;68                         sCurTime->u32Day += 1;
00009e  6083              STR      r3,[r0,#8]
0000a0  e002              B        |L1.168|
                  |L1.162|
;;;69                     else {
;;;70                         sCurTime->u32Day = 1;
0000a2  1c49              ADDS     r1,r1,#1
;;;71                         sCurTime->u32Month += 1;
0000a4  6082              STR      r2,[r0,#8]
0000a6  6041              STR      r1,[r0,#4]
                  |L1.168|
;;;72                     }
;;;73                 }
;;;74             }
;;;75         }
;;;76         sCurTime->u32Second = 0;
;;;77     
;;;78         RTC_SetAlarmDateAndTime(sCurTime);
0000a8  6184              STR      r4,[r0,#0x18]
0000aa  f7fffffe          BL       RTC_SetAlarmDateAndTime
;;;79         RTC_EnableInt(RTC_RIER_AIER_Msk);
0000ae  2001              MOVS     r0,#1
0000b0  f7fffffe          BL       RTC_EnableInt
0000b4  2001              MOVS     r0,#1
0000b6  4903              LDR      r1,|L1.196|
0000b8  07c0              LSLS     r0,r0,#31
0000ba  6008              STR      r0,[r1,#0]
;;;80         NVIC_EnableIRQ(RTC_IRQn);
;;;81     
;;;82     }
0000bc  bd10              POP      {r4,pc}
;;;83     
                          ENDP

0000be  0000              DCW      0x0000
                  |L1.192|
                          DCD      0x40008000
                  |L1.196|
                          DCD      0xe000e100

;*** Start embedded assembler ***

#line 1 "..\\..\\COMMON\\RTC_Common.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_RTC_Common_c_5f99dddd____REV16|
#line 388 "..\\..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_RTC_Common_c_5f99dddd____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_RTC_Common_c_5f99dddd____REVSH|
#line 402
|__asm___12_RTC_Common_c_5f99dddd____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
