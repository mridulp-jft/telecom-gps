; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --feedback=.\obj\PWRDWN_DEMO.fed --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\..\Library\LCDLib\Include -I..\..\..\..\Library\Device\Nuvoton\Nano100Series\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\CMSIS\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=518 --omf_browse=.\obj\main.crf ..\main.c]
                          THUMB

                          AREA ||i.Enter_PowerDown||, CODE, READONLY, ALIGN=2

                  Enter_PowerDown PROC
;;;127      */
;;;128    void Enter_PowerDown()
000000  b510              PUSH     {r4,lr}
;;;129    {
;;;130        /* Back up original setting */
;;;131        SavePinSetting();
000002  f7fffffe          BL       SavePinSetting
;;;132    
;;;133        /* Set function pin to GPIO mode */
;;;134        SYS->PA_L_MFP = 0;
000006  2000              MOVS     r0,#0
000008  2105              MOVS     r1,#5
00000a  0709              LSLS     r1,r1,#28
00000c  6308              STR      r0,[r1,#0x30]
;;;135        SYS->PA_H_MFP = 0;
00000e  6348              STR      r0,[r1,#0x34]
;;;136        SYS->PB_L_MFP = 0;
000010  6388              STR      r0,[r1,#0x38]
;;;137        SYS->PB_H_MFP = 0;
000012  63c8              STR      r0,[r1,#0x3c]
;;;138        SYS->PC_L_MFP = 0;
000014  4913              LDR      r1,|L1.100|
000016  6008              STR      r0,[r1,#0]
;;;139        SYS->PC_H_MFP = 0;
000018  6048              STR      r0,[r1,#4]
;;;140        SYS->PD_L_MFP = 0;
00001a  6088              STR      r0,[r1,#8]
;;;141        SYS->PD_H_MFP = 0;
00001c  60c8              STR      r0,[r1,#0xc]
;;;142        SYS->PE_L_MFP = 0;
00001e  6108              STR      r0,[r1,#0x10]
;;;143        SYS->PE_H_MFP = 0;
000020  6148              STR      r0,[r1,#0x14]
;;;144        SYS->PF_L_MFP = 0x00007700;
000022  2077              MOVS     r0,#0x77
000024  0200              LSLS     r0,r0,#8
000026  6188              STR      r0,[r1,#0x18]
;;;145    
;;;146        /* Enable GPIO pull up */
;;;147        PA->PUEN = 0xFFFF;
000028  4910              LDR      r1,|L1.108|
00002a  480f              LDR      r0,|L1.104|
00002c  6248              STR      r0,[r1,#0x24]
;;;148        PB->PUEN = 0xFFFF;
00002e  490f              LDR      r1,|L1.108|
000030  3140              ADDS     r1,r1,#0x40
000032  6248              STR      r0,[r1,#0x24]
;;;149        PC->PUEN = 0xFFFF;
000034  490d              LDR      r1,|L1.108|
000036  3180              ADDS     r1,r1,#0x80
000038  6248              STR      r0,[r1,#0x24]
;;;150        PD->PUEN = 0xFFFF;
00003a  490c              LDR      r1,|L1.108|
00003c  31c0              ADDS     r1,r1,#0xc0
00003e  6248              STR      r0,[r1,#0x24]
;;;151        PE->PUEN = 0xFFFF;
000040  490b              LDR      r1,|L1.112|
000042  6248              STR      r0,[r1,#0x24]
;;;152        PF->PUEN = 0x0033;      /* exclude GPF2 and GPF3 which are HXT OUT/IN */
000044  490a              LDR      r1,|L1.112|
000046  2033              MOVS     r0,#0x33
000048  3140              ADDS     r1,r1,#0x40
00004a  6248              STR      r0,[r1,#0x24]
;;;153    
;;;154        /* Disable LCD clock */
;;;155        CLK->APBCLK &= ~CLK_APBCLK_LCD_EN; /* Disable LCD clock */
00004c  4809              LDR      r0,|L1.116|
00004e  6881              LDR      r1,[r0,#8]
000050  0442              LSLS     r2,r0,#17
000052  4391              BICS     r1,r1,r2
000054  6081              STR      r1,[r0,#8]
;;;156        CLK->PWRCTL &= ~CLK_PWRCTL_LXT_EN_Msk; /* disable LXT - 32Khz */
000056  6801              LDR      r1,[r0,#0]
000058  2202              MOVS     r2,#2
00005a  4391              BICS     r1,r1,r2
00005c  6001              STR      r1,[r0,#0]
;;;157    
;;;158        CLK_PowerDown();
00005e  f7fffffe          BL       CLK_PowerDown
;;;159    
;;;160    }
000062  bd10              POP      {r4,pc}
;;;161    
                          ENDP

                  |L1.100|
                          DCD      0x50000040
                  |L1.104|
                          DCD      0x0000ffff
                  |L1.108|
                          DCD      0x50004000
                  |L1.112|
                          DCD      0x50004100
                  |L1.116|
                          DCD      0x50000200

                          AREA ||i.Leave_PowerDown||, CODE, READONLY, ALIGN=2

                  Leave_PowerDown PROC
;;;167      */
;;;168    void Leave_PowerDown()
000000  b500              PUSH     {lr}
;;;169    {
;;;170    
;;;171        /* Restore pin setting */
;;;172        RestorePinSetting();
000002  f7fffffe          BL       RestorePinSetting
;;;173    
;;;174        /* Set PF.0 and PF.1 to ICE Data and Clock */
;;;175        SYS->PF_L_MFP |= 0x00000077;
000006  4807              LDR      r0,|L2.36|
000008  6981              LDR      r1,[r0,#0x18]
00000a  2277              MOVS     r2,#0x77
00000c  4311              ORRS     r1,r1,r2
00000e  6181              STR      r1,[r0,#0x18]
;;;176    
;;;177        /* Enable LCD clock */
;;;178        CLK->PWRCTL |= CLK_PWRCTL_LXT_EN_Msk; /* enable LXT - 32Khz */
000010  4805              LDR      r0,|L2.40|
000012  6801              LDR      r1,[r0,#0]
000014  2202              MOVS     r2,#2
000016  4311              ORRS     r1,r1,r2
000018  6001              STR      r1,[r0,#0]
;;;179        CLK->APBCLK |= CLK_APBCLK_LCD_EN; /* enable LCD clock */
00001a  6881              LDR      r1,[r0,#8]
00001c  0442              LSLS     r2,r0,#17
00001e  4311              ORRS     r1,r1,r2
000020  6081              STR      r1,[r0,#8]
;;;180    
;;;181    }
000022  bd00              POP      {pc}
;;;182    
                          ENDP

                  |L2.36|
                          DCD      0x50000040
                  |L2.40|
                          DCD      0x50000200

                          AREA ||i.RestorePinSetting||, CODE, READONLY, ALIGN=2

                  RestorePinSetting PROC
;;;97       */
;;;98     void RestorePinSetting()
000000  4819              LDR      r0,|L3.104|
;;;99     {
;;;100        /* Restore Pin selection setting */
;;;101        SYS->PA_L_MFP = _Pin_Setting[0];
000002  6802              LDR      r2,[r0,#0]  ; _Pin_Setting
000004  2105              MOVS     r1,#5
000006  0709              LSLS     r1,r1,#28
000008  630a              STR      r2,[r1,#0x30]
;;;102        SYS->PA_H_MFP = _Pin_Setting[1];
00000a  6842              LDR      r2,[r0,#4]  ; _Pin_Setting
00000c  634a              STR      r2,[r1,#0x34]
;;;103        SYS->PB_L_MFP = _Pin_Setting[2];
00000e  6882              LDR      r2,[r0,#8]  ; _Pin_Setting
000010  638a              STR      r2,[r1,#0x38]
;;;104        SYS->PB_H_MFP = _Pin_Setting[3];
000012  68c2              LDR      r2,[r0,#0xc]  ; _Pin_Setting
000014  63ca              STR      r2,[r1,#0x3c]
;;;105        SYS->PC_L_MFP = _Pin_Setting[4];
000016  6902              LDR      r2,[r0,#0x10]  ; _Pin_Setting
000018  4914              LDR      r1,|L3.108|
00001a  600a              STR      r2,[r1,#0]
;;;106        SYS->PC_H_MFP = _Pin_Setting[5];
00001c  6942              LDR      r2,[r0,#0x14]  ; _Pin_Setting
00001e  604a              STR      r2,[r1,#4]
;;;107        SYS->PD_L_MFP = _Pin_Setting[6];
000020  6982              LDR      r2,[r0,#0x18]  ; _Pin_Setting
000022  608a              STR      r2,[r1,#8]
;;;108        SYS->PD_H_MFP = _Pin_Setting[7];
000024  69c2              LDR      r2,[r0,#0x1c]  ; _Pin_Setting
000026  60ca              STR      r2,[r1,#0xc]
;;;109        SYS->PE_L_MFP = _Pin_Setting[8];
000028  6a02              LDR      r2,[r0,#0x20]  ; _Pin_Setting
00002a  610a              STR      r2,[r1,#0x10]
;;;110        SYS->PE_H_MFP = _Pin_Setting[9];
00002c  6a42              LDR      r2,[r0,#0x24]  ; _Pin_Setting
00002e  614a              STR      r2,[r1,#0x14]
;;;111        SYS->PF_L_MFP = _Pin_Setting[10];
000030  6a80              LDR      r0,[r0,#0x28]  ; _Pin_Setting
000032  6188              STR      r0,[r1,#0x18]
;;;112    
;;;113        /* Restore Pull-up setting */
;;;114        PA->PUEN = _PullUp_Setting[0];
000034  480c              LDR      r0,|L3.104|
000036  302c              ADDS     r0,r0,#0x2c
000038  6801              LDR      r1,[r0,#0]  ; _PullUp_Setting
00003a  4a0d              LDR      r2,|L3.112|
00003c  6251              STR      r1,[r2,#0x24]
;;;115        PB->PUEN = _PullUp_Setting[1];
00003e  6841              LDR      r1,[r0,#4]  ; _PullUp_Setting
000040  4a0b              LDR      r2,|L3.112|
000042  3240              ADDS     r2,r2,#0x40
000044  6251              STR      r1,[r2,#0x24]
;;;116        PC->PUEN = _PullUp_Setting[2];
000046  6881              LDR      r1,[r0,#8]  ; _PullUp_Setting
000048  4a09              LDR      r2,|L3.112|
00004a  3280              ADDS     r2,r2,#0x80
00004c  6251              STR      r1,[r2,#0x24]
;;;117        PD->PUEN = _PullUp_Setting[3];
00004e  68c1              LDR      r1,[r0,#0xc]  ; _PullUp_Setting
000050  4a07              LDR      r2,|L3.112|
000052  32c0              ADDS     r2,r2,#0xc0
000054  6251              STR      r1,[r2,#0x24]
;;;118        PE->PUEN = _PullUp_Setting[4];
000056  6901              LDR      r1,[r0,#0x10]  ; _PullUp_Setting
000058  4a06              LDR      r2,|L3.116|
00005a  6251              STR      r1,[r2,#0x24]
;;;119        PF->PUEN = _PullUp_Setting[5];
00005c  6940              LDR      r0,[r0,#0x14]  ; _PullUp_Setting
00005e  4905              LDR      r1,|L3.116|
000060  3140              ADDS     r1,r1,#0x40
000062  6248              STR      r0,[r1,#0x24]
;;;120    }
000064  4770              BX       lr
;;;121    
                          ENDP

000066  0000              DCW      0x0000
                  |L3.104|
                          DCD      ||.bss||
                  |L3.108|
                          DCD      0x50000040
                  |L3.112|
                          DCD      0x50004000
                  |L3.116|
                          DCD      0x50004100

                          AREA ||i.SYS_Init||, CODE, READONLY, ALIGN=2

                  SYS_Init PROC
;;;183    
;;;184    void SYS_Init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
;;;186        /*---------------------------------------------------------------------------------------------------------*/
;;;187        /* Init System Clock                                                                                       */
;;;188        /*---------------------------------------------------------------------------------------------------------*/
;;;189        /* Unlock protected registers */
;;;190        SYS_UnlockReg();
000002  f7fffffe          BL       SYS_UnlockReg
;;;191    
;;;192        /* Enable External XTAL (4~24 MHz) */
;;;193        CLK->PWRCTL &= ~CLK_PWRCTL_HXT_EN_Msk;
000006  4c47              LDR      r4,|L4.292|
000008  6820              LDR      r0,[r4,#0]
00000a  0840              LSRS     r0,r0,#1
00000c  0040              LSLS     r0,r0,#1
00000e  6020              STR      r0,[r4,#0]
;;;194        CLK->PWRCTL |= (0x1 << CLK_PWRCTL_HXT_EN_Pos); // HXT Enabled
000010  6820              LDR      r0,[r4,#0]
000012  2101              MOVS     r1,#1
000014  4308              ORRS     r0,r0,r1
000016  6020              STR      r0,[r4,#0]
;;;195    
;;;196        CLK->PWRCTL |= (0x1 << CLK_PWRCTL_LXT_EN_Pos); // LXT Enable
000018  6820              LDR      r0,[r4,#0]
00001a  2502              MOVS     r5,#2
00001c  4328              ORRS     r0,r0,r5
00001e  6020              STR      r0,[r4,#0]
;;;197    
;;;198        /* Waiting for 12MHz clock ready */
;;;199        CLK_WaitClockReady( CLK_CLKSTATUS_HXT_STB_Msk);
000020  4608              MOV      r0,r1
000022  f7fffffe          BL       CLK_WaitClockReady
;;;200        /* Waiting for 32KHz clock ready */
;;;201        CLK_WaitClockReady( CLK_CLKSTATUS_LXT_STB_Msk);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       CLK_WaitClockReady
;;;202    
;;;203        /* Switch HCLK clock source to XTAL */
;;;204        CLK->CLKSEL0 &= ~CLK_CLKSEL0_HCLK_S_Msk;
00002c  6920              LDR      r0,[r4,#0x10]
00002e  08c0              LSRS     r0,r0,#3
000030  00c0              LSLS     r0,r0,#3
000032  6120              STR      r0,[r4,#0x10]
;;;205        CLK->CLKSEL0 |= CLK_CLKSEL0_HCLK_S_HXT;
000034  6920              LDR      r0,[r4,#0x10]
000036  6120              STR      r0,[r4,#0x10]
;;;206    
;;;207        /* Select IP clock source */
;;;208        CLK->CLKSEL1 &= ~CLK_CLKSEL1_UART_S_Msk;
000038  6960              LDR      r0,[r4,#0x14]
00003a  0880              LSRS     r0,r0,#2
00003c  0080              LSLS     r0,r0,#2
00003e  6160              STR      r0,[r4,#0x14]
;;;209        CLK->CLKSEL1 |= (0x0 << CLK_CLKSEL1_UART_S_Pos);// Clock source from external 12 MHz or 32 KHz crystal clock
000040  6960              LDR      r0,[r4,#0x14]
000042  6160              STR      r0,[r4,#0x14]
;;;210    
;;;211        CLK->CLKSEL1 &= ~CLK_CLKSEL1_LCD_S_Msk;
000044  6960              LDR      r0,[r4,#0x14]
000046  0261              LSLS     r1,r4,#9
000048  4388              BICS     r0,r0,r1
00004a  6160              STR      r0,[r4,#0x14]
;;;212        CLK->CLKSEL1 |= (0x0 << CLK_CLKSEL1_LCD_S_LXT);// Clock source from external 12 MHz or 32 KHz crystal clock
00004c  6960              LDR      r0,[r4,#0x14]
00004e  6160              STR      r0,[r4,#0x14]
;;;213    
;;;214        /* Enable IP clock */
;;;215        CLK->APBCLK |= CLK_APBCLK_UART0_EN; // UART0 Clock Enable
000050  68a0              LDR      r0,[r4,#8]
000052  1089              ASRS     r1,r1,#2
000054  4308              ORRS     r0,r0,r1
000056  60a0              STR      r0,[r4,#8]
;;;216        CLK->APBCLK |= CLK_APBCLK_LCD_EN;
000058  68a0              LDR      r0,[r4,#8]
00005a  0289              LSLS     r1,r1,#10
00005c  4308              ORRS     r0,r0,r1
00005e  60a0              STR      r0,[r4,#8]
;;;217        CLK->APBCLK |= CLK_APBCLK_RTC_EN;
000060  68a0              LDR      r0,[r4,#8]
000062  4328              ORRS     r0,r0,r5
000064  60a0              STR      r0,[r4,#8]
;;;218    
;;;219        /* Update System Core Clock */
;;;220        /* User can use SystemCoreClockUpdate() to calculate PllClock, SystemCoreClock and CycylesPerUs automatically. */
;;;221        SystemCoreClockUpdate();
000066  f7fffffe          BL       SystemCoreClockUpdate
;;;222    
;;;223        /*---------------------------------------------------------------------------------------------------------*/
;;;224        /* Init I/O Multi-function                                                                                 */
;;;225        /*---------------------------------------------------------------------------------------------------------*/
;;;226        /* Set PB multi-function pins for UART0 RXD and TXD  */
;;;227        SYS->PA_H_MFP &= ~(SYS_PA_H_MFP_PA14_MFP_Msk|SYS_PA_H_MFP_PA15_MFP_Msk);
00006a  2005              MOVS     r0,#5
00006c  0700              LSLS     r0,r0,#28
00006e  6b41              LDR      r1,[r0,#0x34]
000070  2377              MOVS     r3,#0x77
000072  061b              LSLS     r3,r3,#24
000074  4399              BICS     r1,r1,r3
000076  6341              STR      r1,[r0,#0x34]
;;;228        SYS->PA_H_MFP |=  (SYS_PA_H_MFP_PA14_MFP_UART0_RX|SYS_PA_H_MFP_PA15_MFP_UART0_TX);
000078  6b41              LDR      r1,[r0,#0x34]
00007a  2233              MOVS     r2,#0x33
00007c  0652              LSLS     r2,r2,#25
00007e  4311              ORRS     r1,r1,r2
000080  6341              STR      r1,[r0,#0x34]
;;;229    
;;;230        /* Select LCD COMs, SEGs, V1 ~ V3, DH1, DH2 */
;;;231        MFP_LCD_TYPEA();
000082  6b01              LDR      r1,[r0,#0x30]
000084  4c28              LDR      r4,|L4.296|
000086  4321              ORRS     r1,r1,r4
000088  6301              STR      r1,[r0,#0x30]
00008a  6b41              LDR      r1,[r0,#0x34]
00008c  1422              ASRS     r2,r4,#16
00008e  4311              ORRS     r1,r1,r2
000090  6341              STR      r1,[r0,#0x34]
000092  4926              LDR      r1,|L4.300|
000094  6381              STR      r1,[r0,#0x38]
000096  63c1              STR      r1,[r0,#0x3c]
000098  4825              LDR      r0,|L4.304|
00009a  6802              LDR      r2,[r0,#0]
00009c  120d              ASRS     r5,r1,#8
00009e  432a              ORRS     r2,r2,r5
0000a0  6002              STR      r2,[r0,#0]
0000a2  6842              LDR      r2,[r0,#4]
0000a4  431a              ORRS     r2,r2,r3
0000a6  6042              STR      r2,[r0,#4]
0000a8  6882              LDR      r2,[r0,#8]
0000aa  4322              ORRS     r2,r2,r4
0000ac  6082              STR      r2,[r0,#8]
0000ae  60c1              STR      r1,[r0,#0xc]
0000b0  6901              LDR      r1,[r0,#0x10]
0000b2  011a              LSLS     r2,r3,#4
0000b4  4311              ORRS     r1,r1,r2
0000b6  6101              STR      r1,[r0,#0x10]
0000b8  6941              LDR      r1,[r0,#0x14]
0000ba  4a1e              LDR      r2,|L4.308|
0000bc  4311              ORRS     r1,r1,r2
0000be  6141              STR      r1,[r0,#0x14]
;;;232    
;;;233        /* Digital Input Path Disable */
;;;234        /* V1, V2 and V3 */
;;;235        PB->OFFD |= (0xE000000);
0000c0  491d              LDR      r1,|L4.312|
0000c2  6848              LDR      r0,[r1,#4]
0000c4  0652              LSLS     r2,r2,#25
0000c6  4310              ORRS     r0,r0,r2
0000c8  6048              STR      r0,[r1,#4]
;;;236        /* DH1 and DH2 */
;;;237        PC->OFFD |= (0x30000);
0000ca  481b              LDR      r0,|L4.312|
0000cc  3040              ADDS     r0,r0,#0x40
0000ce  6842              LDR      r2,[r0,#4]
0000d0  2303              MOVS     r3,#3
0000d2  041b              LSLS     r3,r3,#16
0000d4  431a              ORRS     r2,r2,r3
0000d6  6042              STR      r2,[r0,#4]
;;;238        /* COM0~3 */
;;;239        PC->OFFD |= (0x3C0000);
0000d8  6842              LDR      r2,[r0,#4]
0000da  230f              MOVS     r3,#0xf
0000dc  049b              LSLS     r3,r3,#18
0000de  431a              ORRS     r2,r2,r3
0000e0  6042              STR      r2,[r0,#4]
;;;240        /* SEG0~39 */
;;;241        PA->OFFD |= (0x0FF00000);
0000e2  4a15              LDR      r2,|L4.312|
0000e4  3a40              SUBS     r2,r2,#0x40
0000e6  6853              LDR      r3,[r2,#4]
0000e8  24ff              MOVS     r4,#0xff
0000ea  0524              LSLS     r4,r4,#20
0000ec  4323              ORRS     r3,r3,r4
0000ee  6053              STR      r3,[r2,#4]
;;;242        PB->OFFD |= (0xF1FF0000);
0000f0  684a              LDR      r2,[r1,#4]
0000f2  4b12              LDR      r3,|L4.316|
0000f4  431a              ORRS     r2,r2,r3
0000f6  604a              STR      r2,[r1,#4]
;;;243        PC->OFFD |= (0xC0000000);
0000f8  6841              LDR      r1,[r0,#4]
0000fa  039a              LSLS     r2,r3,#14
0000fc  4311              ORRS     r1,r1,r2
0000fe  6041              STR      r1,[r0,#4]
;;;244        PD->OFFD |= (0xFFF00000);
000100  480d              LDR      r0,|L4.312|
000102  3080              ADDS     r0,r0,#0x80
000104  6841              LDR      r1,[r0,#4]
000106  1292              ASRS     r2,r2,#10
000108  4311              ORRS     r1,r1,r2
00010a  6041              STR      r1,[r0,#4]
;;;245        PE->OFFD |= (0xE1800000);
00010c  480a              LDR      r0,|L4.312|
00010e  30c0              ADDS     r0,r0,#0xc0
000110  6841              LDR      r1,[r0,#4]
000112  4a0b              LDR      r2,|L4.320|
000114  4311              ORRS     r1,r1,r2
000116  6041              STR      r1,[r0,#4]
000118  4905              LDR      r1,|L4.304|
00011a  2000              MOVS     r0,#0
00011c  31c0              ADDS     r1,r1,#0xc0
00011e  6008              STR      r0,[r1,#0]
;;;246    
;;;247        /* Lock protected registers */
;;;248        SYS_LockReg();
;;;249    
;;;250    }
000120  bd70              POP      {r4-r6,pc}
;;;251    
                          ENDP

000122  0000              DCW      0x0000
                  |L4.292|
                          DCD      0x50000200
                  |L4.296|
                          DCD      0x77770000
                  |L4.300|
                          DCD      0x77777777
                  |L4.304|
                          DCD      0x50000040
                  |L4.308|
                          DCD      0x77700007
                  |L4.312|
                          DCD      0x50004040
                  |L4.316|
                          DCD      0xf1ff0000
                  |L4.320|
                          DCD      0xe1800000

                          AREA ||i.SYS_UnlockReg||, CODE, READONLY, ALIGN=2

                  SYS_UnlockReg PROC
;;;824      */
;;;825    __STATIC_INLINE void SYS_UnlockReg(void)
000000  b510              PUSH     {r4,lr}
;;;826    {
;;;827        while(SYS->RegLockAddr != SYS_RegLockAddr_RegUnLock_Msk) {
;;;828            SYS->RegLockAddr = 0x59;
000002  2159              MOVS     r1,#0x59
;;;829            SYS->RegLockAddr = 0x16;
000004  2316              MOVS     r3,#0x16
000006  4805              LDR      r0,|L5.28|
;;;830            SYS->RegLockAddr = 0x88;
000008  2288              MOVS     r2,#0x88
00000a  e002              B        |L5.18|
                  |L5.12|
00000c  6001              STR      r1,[r0,#0]            ;828
00000e  6003              STR      r3,[r0,#0]            ;829
000010  6002              STR      r2,[r0,#0]
                  |L5.18|
000012  6804              LDR      r4,[r0,#0]            ;827
000014  2c01              CMP      r4,#1                 ;827
000016  d1f9              BNE      |L5.12|
;;;831        }
;;;832    }
000018  bd10              POP      {r4,pc}
;;;833    
                          ENDP

00001a  0000              DCW      0x0000
                  |L5.28|
                          DCD      0x50000100

                          AREA ||i.SavePinSetting||, CODE, READONLY, ALIGN=2

                  SavePinSetting PROC
;;;67       */
;;;68     void SavePinSetting()
000000  2105              MOVS     r1,#5
;;;69     {
;;;70         /* Save Pin selection setting */
;;;71         _Pin_Setting[0] = SYS->PA_L_MFP;
000002  0709              LSLS     r1,r1,#28
000004  6b0a              LDR      r2,[r1,#0x30]
000006  4818              LDR      r0,|L6.104|
000008  6002              STR      r2,[r0,#0]  ; _Pin_Setting
;;;72         _Pin_Setting[1] = SYS->PA_H_MFP;
00000a  6b4a              LDR      r2,[r1,#0x34]
00000c  6042              STR      r2,[r0,#4]  ; _Pin_Setting
;;;73         _Pin_Setting[2] = SYS->PB_L_MFP;
00000e  6b8a              LDR      r2,[r1,#0x38]
000010  6082              STR      r2,[r0,#8]  ; _Pin_Setting
;;;74         _Pin_Setting[3] = SYS->PB_H_MFP;
000012  6bc9              LDR      r1,[r1,#0x3c]
000014  60c1              STR      r1,[r0,#0xc]  ; _Pin_Setting
;;;75         _Pin_Setting[4] = SYS->PC_L_MFP;
000016  4915              LDR      r1,|L6.108|
000018  680a              LDR      r2,[r1,#0]
00001a  6102              STR      r2,[r0,#0x10]  ; _Pin_Setting
;;;76         _Pin_Setting[5] = SYS->PC_H_MFP;
00001c  684a              LDR      r2,[r1,#4]
00001e  6142              STR      r2,[r0,#0x14]  ; _Pin_Setting
;;;77         _Pin_Setting[6] = SYS->PD_L_MFP;
000020  688a              LDR      r2,[r1,#8]
000022  6182              STR      r2,[r0,#0x18]  ; _Pin_Setting
;;;78         _Pin_Setting[7] = SYS->PD_H_MFP;
000024  68ca              LDR      r2,[r1,#0xc]
000026  61c2              STR      r2,[r0,#0x1c]  ; _Pin_Setting
;;;79         _Pin_Setting[8] = SYS->PE_L_MFP;
000028  690a              LDR      r2,[r1,#0x10]
00002a  6202              STR      r2,[r0,#0x20]  ; _Pin_Setting
;;;80         _Pin_Setting[9] = SYS->PE_H_MFP;
00002c  694a              LDR      r2,[r1,#0x14]
00002e  6242              STR      r2,[r0,#0x24]  ; _Pin_Setting
;;;81         _Pin_Setting[10] = SYS->PF_L_MFP;
000030  6989              LDR      r1,[r1,#0x18]
000032  6281              STR      r1,[r0,#0x28]  ; _Pin_Setting
;;;82     
;;;83         /* Save Pull-up setting */
;;;84         _PullUp_Setting[0] =  PA->PUEN;
000034  480e              LDR      r0,|L6.112|
000036  6a41              LDR      r1,[r0,#0x24]
000038  480b              LDR      r0,|L6.104|
00003a  302c              ADDS     r0,r0,#0x2c
00003c  6001              STR      r1,[r0,#0]  ; _PullUp_Setting
;;;85         _PullUp_Setting[1] =  PB->PUEN;
00003e  490c              LDR      r1,|L6.112|
000040  3140              ADDS     r1,r1,#0x40
000042  6a49              LDR      r1,[r1,#0x24]
000044  6041              STR      r1,[r0,#4]  ; _PullUp_Setting
;;;86         _PullUp_Setting[2] =  PC->PUEN;
000046  490a              LDR      r1,|L6.112|
000048  3180              ADDS     r1,r1,#0x80
00004a  6a49              LDR      r1,[r1,#0x24]
00004c  6081              STR      r1,[r0,#8]  ; _PullUp_Setting
;;;87         _PullUp_Setting[3] =  PD->PUEN;
00004e  4908              LDR      r1,|L6.112|
000050  31c0              ADDS     r1,r1,#0xc0
000052  6a49              LDR      r1,[r1,#0x24]
000054  60c1              STR      r1,[r0,#0xc]  ; _PullUp_Setting
;;;88         _PullUp_Setting[4] =  PE->PUEN;
000056  4907              LDR      r1,|L6.116|
000058  6a49              LDR      r1,[r1,#0x24]
00005a  6101              STR      r1,[r0,#0x10]  ; _PullUp_Setting
;;;89         _PullUp_Setting[5] =  PF->PUEN;
00005c  4905              LDR      r1,|L6.116|
00005e  3140              ADDS     r1,r1,#0x40
000060  6a49              LDR      r1,[r1,#0x24]
000062  6141              STR      r1,[r0,#0x14]  ; _PullUp_Setting
;;;90     }
000064  4770              BX       lr
;;;91     
                          ENDP

000066  0000              DCW      0x0000
                  |L6.104|
                          DCD      ||.bss||
                  |L6.108|
                          DCD      0x50000040
                  |L6.112|
                          DCD      0x50004000
                  |L6.116|
                          DCD      0x50004100

                          AREA ||i.UART0_Init||, CODE, READONLY, ALIGN=2

                  UART0_Init PROC
;;;251    
;;;252    void UART0_Init()
000000  b510              PUSH     {r4,lr}
;;;253    {
;;;254        /*---------------------------------------------------------------------------------------------------------*/
;;;255        /* Init UART                                                                                               */
;;;256        /*---------------------------------------------------------------------------------------------------------*/
;;;257        UART_Open(UART0, 115200);
000002  21e1              MOVS     r1,#0xe1
000004  0249              LSLS     r1,r1,#9
000006  4802              LDR      r0,|L7.16|
000008  f7fffffe          BL       UART_Open
;;;258    }
00000c  bd10              POP      {r4,pc}
;;;259    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      0x40050000

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;265      */
;;;266    int32_t main(void)
000000  b08a              SUB      sp,sp,#0x28
;;;267    {
;;;268        S_RTC_TIME_DATA_T sCurTime;
;;;269    
;;;270        SYS_Init();
000002  f7fffffe          BL       SYS_Init
;;;271        UART0_Init();
000006  f7fffffe          BL       UART0_Init
;;;272    
;;;273        DEBUG_MSG("\nNANO130 NuTiny EVB Demo Program V1.0.0\n");
;;;274        DEBUG_MSG("[Power Down Demo]\n");
;;;275    
;;;276        /* Unlock protected registers */
;;;277        SYS_UnlockReg();
00000a  f7fffffe          BL       SYS_UnlockReg
;;;278    
;;;279        /* Time Setting */
;;;280        sCurTime.u32Year       = 2013;
00000e  4832              LDR      r0,|L8.216|
;;;281        sCurTime.u32Month      = 10;
000010  9001              STR      r0,[sp,#4]
000012  200a              MOVS     r0,#0xa
;;;282        sCurTime.u32Day        = 15;
000014  9002              STR      r0,[sp,#8]
000016  200f              MOVS     r0,#0xf
;;;283        sCurTime.u32Hour       = 0;
;;;284        sCurTime.u32Minute     = 0;
;;;285        sCurTime.u32Second     = 0;
;;;286        sCurTime.u32DayOfWeek  = RTC_TUESDAY;
000018  9003              STR      r0,[sp,#0xc]
00001a  2600              MOVS     r6,#0                 ;283
00001c  2002              MOVS     r0,#2
;;;287        sCurTime.u32TimeScale  = RTC_CLOCK_24;
00001e  2401              MOVS     r4,#1
;;;288    
;;;289        RTC_Open(&sCurTime);
000020  9004              STR      r0,[sp,#0x10]
000022  9605              STR      r6,[sp,#0x14]         ;284
000024  9606              STR      r6,[sp,#0x18]         ;285
000026  9607              STR      r6,[sp,#0x1c]         ;286
000028  9408              STR      r4,[sp,#0x20]
00002a  a801              ADD      r0,sp,#4
00002c  f7fffffe          BL       RTC_Open
;;;290        DEBUG_MSG("RTC Init. complete!\n");
;;;291    
;;;292        /* Do LCD Initializaton */
;;;293        LCD_Open(LCD_C_TYPE, 4, LCD_BIAS_THIRD, LCD_FREQ_DIV64, LCD_CPVOl_3V);
000030  02a0              LSLS     r0,r4,#10
000032  2204              MOVS     r2,#4
000034  9000              STR      r0,[sp,#0]
000036  2310              MOVS     r3,#0x10
000038  4611              MOV      r1,r2
00003a  2000              MOVS     r0,#0
00003c  f7fffffe          BL       LCD_Open
000040  4826              LDR      r0,|L8.220|
000042  6801              LDR      r1,[r0,#0]
000044  4321              ORRS     r1,r1,r4
000046  6001              STR      r1,[r0,#0]
;;;294        LCD_EnableDisplay();
;;;295    
;;;296        DEBUG_MSG("LCD Init. complete!\n");
;;;297    
;;;298        /* Start displaying on LCD */
;;;299        LCDLIB_SetSymbol(2, 27, 1);
000048  2201              MOVS     r2,#1
00004a  211b              MOVS     r1,#0x1b
00004c  2002              MOVS     r0,#2
00004e  f7fffffe          BL       LCDLIB_SetSymbol
;;;300        CLK_SysTickDelay(335000);
000052  4d23              LDR      r5,|L8.224|
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       CLK_SysTickDelay
;;;301    
;;;302        textticker("*** NUVOTON NANO130 ***", 335000);
00005a  4629              MOV      r1,r5
00005c  a021              ADR      r0,|L8.228|
00005e  f7fffffe          BL       textticker
;;;303        CLK_SysTickDelay(335000);
000062  4628              MOV      r0,r5
000064  f7fffffe          BL       CLK_SysTickDelay
;;;304    
;;;305        LCDLIB_Printf(0, "NUVOTON");
000068  a124              ADR      r1,|L8.252|
00006a  2000              MOVS     r0,#0
00006c  f7fffffe          BL       LCDLIB_Printf
;;;306        LCD_EnableBlink(250);
000070  20fa              MOVS     r0,#0xfa
000072  f7fffffe          BL       LCD_EnableBlink
;;;307        CLK_SysTickDelay(335000);
000076  4628              MOV      r0,r5
000078  f7fffffe          BL       CLK_SysTickDelay
;;;308        CLK_SysTickDelay(335000);
00007c  4628              MOV      r0,r5
00007e  f7fffffe          BL       CLK_SysTickDelay
;;;309        CLK_SysTickDelay(335000);
000082  4628              MOV      r0,r5
000084  f7fffffe          BL       CLK_SysTickDelay
;;;310        CLK_SysTickDelay(335000);
000088  4628              MOV      r0,r5
00008a  f7fffffe          BL       CLK_SysTickDelay
;;;311        CLK_SysTickDelay(335000);
00008e  4628              MOV      r0,r5
000090  f7fffffe          BL       CLK_SysTickDelay
;;;312        LCD_DisableBlink();
000094  f7fffffe          BL       LCD_DisableBlink
;;;313    
;;;314        /* Read curent RTC time */
;;;315        RTC_GetDateAndTime(&sCurTime);
000098  a801              ADD      r0,sp,#4
00009a  f7fffffe          BL       RTC_GetDateAndTime
;;;316        DEBUG_MSG("Current Time:%d/%02d/%02d %02d:%02d:%02d\n",sCurTime.u32Year,sCurTime.u32Month,sCurTime.u32Day,sCurTime.u32Hour,sCurTime.u32Minute,sCurTime.u32Second);
;;;317    
;;;318        /* Display RTC time */
;;;319        showTime(sCurTime.u32Hour, sCurTime.u32Minute);
00009e  9906              LDR      r1,[sp,#0x18]
0000a0  9805              LDR      r0,[sp,#0x14]
0000a2  f7fffffe          BL       showTime
;;;320    
;;;321        DEBUG_MSG("Start MAIN loop.\n");
;;;322        while(1) {
;;;323            textticker("*** GOING TO POWER DOWN ***", 335000);
;;;324            DEBUG_MSG("Going to Power Down...\n");
;;;325    #ifdef __DEBUG_MSG
;;;326            while(!(UART1->FSR & UART_FSR_TE_F)) ;  /* waits for message send out */
;;;327    #endif
;;;328            /* Enter power down mode */
;;;329            /* This sample will not wake up*/
;;;330            Enter_PowerDown();
;;;331    
;;;332            DEBUG_MSG("Program resume...\n");
;;;333    
;;;334            if (_Wakeup_Flag == 1) {
0000a6  4c17              LDR      r4,|L8.260|
                  |L8.168|
0000a8  4629              MOV      r1,r5                 ;323
0000aa  a017              ADR      r0,|L8.264|
0000ac  f7fffffe          BL       textticker
0000b0  f7fffffe          BL       Enter_PowerDown
0000b4  6820              LDR      r0,[r4,#0]  ; _Wakeup_Flag
0000b6  2801              CMP      r0,#1
0000b8  d1f6              BNE      |L8.168|
;;;335                _Wakeup_Flag = 0;
0000ba  6026              STR      r6,[r4,#0]  ; _Wakeup_Flag
;;;336    
;;;337                textticker("*** WAKE UP ***", 335000);
0000bc  4629              MOV      r1,r5
0000be  a019              ADR      r0,|L8.292|
0000c0  f7fffffe          BL       textticker
;;;338                CLK_SysTickDelay(335000);
0000c4  4628              MOV      r0,r5
0000c6  f7fffffe          BL       CLK_SysTickDelay
;;;339                CLK_SysTickDelay(335000);
0000ca  4628              MOV      r0,r5
0000cc  f7fffffe          BL       CLK_SysTickDelay
;;;340                CLK_SysTickDelay(335000);
0000d0  4628              MOV      r0,r5
0000d2  f7fffffe          BL       CLK_SysTickDelay
0000d6  e7e7              B        |L8.168|
;;;341            }
;;;342        };
;;;343    
;;;344    
;;;345    }
;;;346    
                          ENDP

                  |L8.216|
                          DCD      0x000007dd
                  |L8.220|
                          DCD      0x400b0000
                  |L8.224|
                          DCD      0x00051c98
                  |L8.228|
0000e4  2a2a2a20          DCB      "*** NUVOTON NANO130 ***",0
0000e8  4e55564f
0000ec  544f4e20
0000f0  4e414e4f
0000f4  31333020
0000f8  2a2a2a00
                  |L8.252|
0000fc  4e55564f          DCB      "NUVOTON",0
000100  544f4e00
                  |L8.260|
                          DCD      ||.data||
                  |L8.264|
000108  2a2a2a20          DCB      "*** GOING TO POWER DOWN ***",0
00010c  474f494e
000110  4720544f
000114  20504f57
000118  45522044
00011c  4f574e20
000120  2a2a2a00
                  |L8.292|
000124  2a2a2a20          DCB      "*** WAKE UP ***",0
000128  57414b45
00012c  20555020
000130  2a2a2a00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _Pin_Setting
                          %        44
                  _PullUp_Setting
                          %        24

                          AREA ||.data||, DATA, ALIGN=2

                  _Wakeup_Flag
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_431424b2____REV16|
#line 388 "..\\..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_main_c_431424b2____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_431424b2____REVSH|
#line 402
|__asm___6_main_c_431424b2____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
