; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\uv4build\cmp.o --asm_dir=.\UV4Build\ --list_dir=.\UV4Build\ --depend=.\uv4build\cmp.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\src\projects\KEIL_MAG -I..\..\..\src\common -I..\..\..\src\cpu -I..\..\..\src\cpu\headers\CMSIS\MKL26Z4\Include -I..\..\..\src\drivers\llwu -I..\..\..\src\drivers\lptmr -I..\..\..\src\drivers\mcg -I..\..\..\src\drivers\pmc -I..\..\..\src\drivers\rcm -I..\..\..\src\drivers\rtc -I..\..\..\src\drivers\smc -I..\..\..\src\drivers\uart -I..\..\..\src\drivers\cmp -I..\..\..\src\platforms -I..\.. -I..\..\..\src\cpu\CMSIS\Source -I..\..\..\src\cpu\CMSIS\Source\arm -I..\..\..\..\inc -I..\vts_ver3_rev1 -IF:\vts-ver18\build\keil\vts_ver3_rev1\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.12.0\Device\Include -D__UVISION_VERSION=518 -D_RTE_ -DMKL26Z256xxx4 -DKEIL -DFREEDOM -DCMSIS --omf_browse=.\uv4build\cmp.crf ..\..\..\src\drivers\cmp\cmp.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  cmp_init PROC
;;;34      */
;;;35     void cmp_init ( unsigned char rising_falling ) 
000000  2100              MOVS     r1,#0
;;;36     {
;;;37                    // Filter and digital hysteresis disabled
;;;38                  CMP0_CR0 = 0x00;
000002  4a25              LDR      r2,|L1.152|
000004  7011              STRB     r1,[r2,#0]
;;;39                  // no sample(continuous), no window, -, HS mode, 
;;;40                  // no invert, COUTA(unfiltered), output pin enable, moduledisable
;;;41                  CMP0_CR1 = CMP_CR1_PMODE_MASK | CMP_CR1_COS_MASK | CMP_CR1_OPE_MASK; //0x16;
000006  2116              MOVS     r1,#0x16
000008  7051              STRB     r1,[r2,#1]
;;;42                  // Filter disabled
;;;43                  CMP0_FPR = 0x00;
00000a  2100              MOVS     r1,#0
00000c  7091              STRB     r1,[r2,#2]
;;;44                  // Enable rising or falling edge interrupts, clear flags
;;;45                  CMP0_SCR = //CMP_SCR_IER_MASK |
00000e  2104              MOVS     r1,#4
000010  4301              ORRS     r1,r1,r0
000012  2202              MOVS     r2,#2
000014  4311              ORRS     r1,r1,r2
000016  4a20              LDR      r2,|L1.152|
000018  70d1              STRB     r1,[r2,#3]
;;;46                                       rising_falling |
;;;47                                       //CMP_SCR_IEF_MASK | 
;;;48                                       CMP_SCR_CFR_MASK |
;;;49                                       CMP_SCR_CFF_MASK;   //0x1E
;;;50                  // 6-bit DAC enabled, output set to 1/2-scale, Vdd reference
;;;51                  CMP0_DACCR = CMP_DACCR_DACEN_MASK |
00001a  21e0              MOVS     r1,#0xe0
00001c  7111              STRB     r1,[r2,#4]
;;;52                                         CMP_DACCR_VRSEL_MASK |
;;;53                                         CMP_DACCR_VOSEL(0x20);   //0xE0;
;;;54                  // P-input as external channel 0, M-input as 6b DAC
;;;55                  CMP0_MUXCR = CMP_MUXCR_PSEL(0) |
00001e  2107              MOVS     r1,#7
000020  7151              STRB     r1,[r2,#5]
;;;56                                         CMP_MUXCR_MSEL(7);   //0x07;
;;;57     
;;;58                  // enable CMP
;;;59                  CMP0_CR1 |= CMP_CR1_EN_MASK;
000022  4611              MOV      r1,r2
000024  7849              LDRB     r1,[r1,#1]
000026  2201              MOVS     r2,#1
000028  4311              ORRS     r1,r1,r2
00002a  4a1b              LDR      r2,|L1.152|
00002c  7051              STRB     r1,[r2,#1]
;;;60     }
00002e  4770              BX       lr
;;;61     
                          ENDP

                  cmp0_isr PROC
;;;62     
;;;63     void cmp0_isr(void)
000030  b510              PUSH     {r4,lr}
;;;64     {
;;;65       GPIOB_PSOR = 0x00080000;           // set Port B 19 indicate wakeup
000032  2001              MOVS     r0,#1
000034  04c0              LSLS     r0,r0,#19
000036  4919              LDR      r1,|L1.156|
000038  6048              STR      r0,[r1,#4]
;;;66     
;;;67       printf("\n[CMP0_ISR]****ISR entered*****\r\n\n");
00003a  a019              ADR      r0,|L1.160|
00003c  f7fffffe          BL       __2printf
;;;68       printf("[CMP0_ISR]CMP0_SCR   = %#02X ",    (CMP0_SCR ))  ;
000040  4815              LDR      r0,|L1.152|
000042  78c1              LDRB     r1,[r0,#3]
000044  a01f              ADR      r0,|L1.196|
000046  f7fffffe          BL       __2printf
;;;69       if (CMP0_SCR & CMP_SCR_CFR_MASK) {
00004a  4813              LDR      r0,|L1.152|
00004c  78c0              LDRB     r0,[r0,#3]
00004e  2104              MOVS     r1,#4
000050  4008              ANDS     r0,r0,r1
000052  2800              CMP      r0,#0
000054  d00c              BEQ      |L1.112|
;;;70          CMP0_SCR |= CMP_SCR_CFR_MASK;  
000056  4810              LDR      r0,|L1.152|
000058  78c0              LDRB     r0,[r0,#3]
00005a  4308              ORRS     r0,r0,r1
00005c  490e              LDR      r1,|L1.152|
00005e  70c8              STRB     r0,[r1,#3]
;;;71          printf(" CMP0_CFR set and is now clear \n");
000060  a020              ADR      r0,|L1.228|
000062  f7fffffe          BL       __2printf
;;;72          printf("[CMP0_ISR]CMP0_SCR   = %#02X ",    (CMP0_SCR ))  ;
000066  480c              LDR      r0,|L1.152|
000068  78c1              LDRB     r1,[r0,#3]
00006a  a016              ADR      r0,|L1.196|
00006c  f7fffffe          BL       __2printf
                  |L1.112|
;;;73       }
;;;74       if (CMP0_SCR & CMP_SCR_CFF_MASK) {
000070  4809              LDR      r0,|L1.152|
000072  78c0              LDRB     r0,[r0,#3]
000074  2102              MOVS     r1,#2
000076  4008              ANDS     r0,r0,r1
000078  2800              CMP      r0,#0
00007a  d00c              BEQ      |L1.150|
;;;75          CMP0_SCR |= CMP_SCR_CFF_MASK;  
00007c  4806              LDR      r0,|L1.152|
00007e  78c0              LDRB     r0,[r0,#3]
000080  4308              ORRS     r0,r0,r1
000082  4905              LDR      r1,|L1.152|
000084  70c8              STRB     r0,[r1,#3]
;;;76          printf(" CMP0_CFF set and is now clear \n");
000086  a020              ADR      r0,|L1.264|
000088  f7fffffe          BL       __2printf
;;;77          printf("[CMP0_ISR]CMP0_SCR   = %#02X ",    (CMP0_SCR ))  ;
00008c  4802              LDR      r0,|L1.152|
00008e  78c1              LDRB     r1,[r0,#3]
000090  a00c              ADR      r0,|L1.196|
000092  f7fffffe          BL       __2printf
                  |L1.150|
;;;78       }
;;;79       return;  
;;;80     }
000096  bd10              POP      {r4,pc}
                          ENDP

                  |L1.152|
                          DCD      0x40073000
                  |L1.156|
                          DCD      0x400ff040
                  |L1.160|
0000a0  0a5b434d          DCB      "\n[CMP0_ISR]****ISR entered*****\r\n\n",0
0000a4  50305f49
0000a8  53525d2a
0000ac  2a2a2a49
0000b0  53522065
0000b4  6e746572
0000b8  65642a2a
0000bc  2a2a2a0d
0000c0  0a0a00  
0000c3  00                DCB      0
                  |L1.196|
0000c4  5b434d50          DCB      "[CMP0_ISR]CMP0_SCR   = %#02X ",0
0000c8  305f4953
0000cc  525d434d
0000d0  50305f53
0000d4  43522020
0000d8  203d2025
0000dc  23303258
0000e0  2000    
0000e2  00                DCB      0
0000e3  00                DCB      0
                  |L1.228|
0000e4  20434d50          DCB      " CMP0_CFR set and is now clear \n",0
0000e8  305f4346
0000ec  52207365
0000f0  7420616e
0000f4  64206973
0000f8  206e6f77
0000fc  20636c65
000100  6172200a
000104  00      
000105  00                DCB      0
000106  00                DCB      0
000107  00                DCB      0
                  |L1.264|
000108  20434d50          DCB      " CMP0_CFF set and is now clear \n",0
00010c  305f4346
000110  46207365
000114  7420616e
000118  64206973
00011c  206e6f77
000120  20636c65
000124  6172200a
000128  00      
000129  00                DCB      0
00012a  00                DCB      0
00012b  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\src\\drivers\\cmp\\cmp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_cmp_c_cmp_init____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_cmp_c_cmp_init____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_cmp_c_cmp_init____REVSH|
#line 402
|__asm___5_cmp_c_cmp_init____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
