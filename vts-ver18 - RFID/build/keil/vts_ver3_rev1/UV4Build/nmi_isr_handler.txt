; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\uv4build\nmi_isr_handler.o --asm_dir=.\UV4Build\ --list_dir=.\UV4Build\ --depend=.\uv4build\nmi_isr_handler.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\src\projects\KEIL_MAG -I..\..\..\src\common -I..\..\..\src\cpu -I..\..\..\src\cpu\headers\CMSIS\MKL26Z4\Include -I..\..\..\src\drivers\llwu -I..\..\..\src\drivers\lptmr -I..\..\..\src\drivers\mcg -I..\..\..\src\drivers\pmc -I..\..\..\src\drivers\rcm -I..\..\..\src\drivers\rtc -I..\..\..\src\drivers\smc -I..\..\..\src\drivers\uart -I..\..\..\src\drivers\cmp -I..\..\..\src\platforms -I..\.. -I..\..\..\src\cpu\CMSIS\Source -I..\..\..\src\cpu\CMSIS\Source\arm -I..\..\..\..\inc -I..\vts_ver3_rev1 -IE:\bitbuck\gps-trackr\Software\vts-ver18+\build\keil\vts_ver3_rev1\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0-Beta4\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.11.0\Device\Include -D__UVISION_VERSION=518 -D_RTE_ -DMKL26Z128xxx4 -DKEIL -DFREEDOM -DCMSIS --omf_browse=.\uv4build\nmi_isr_handler.crf ..\..\..\src\cpu\nmi_isr_handler.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  NMI_Handler PROC
;;;12     #ifdef CMSIS
;;;13     void NMI_Handler(void)
000000  4913              LDR      r1,|L1.80|
;;;14     #else
;;;15     void nmi_isr(void)
;;;16     #endif
;;;17     {
;;;18       int i;
;;;19     /*    issue with rev 0 silicon - if in CPO and NMI taken, exit CPO */
;;;20       if(MCM_CPO & MCM_CPO_CPOACK_MASK){
000002  6809              LDR      r1,[r1,#0]
000004  2202              MOVS     r2,#2
000006  4011              ANDS     r1,r1,r2
000008  2900              CMP      r1,#0
00000a  d00d              BEQ      |L1.40|
;;;21           MCM_CPO &= ~MCM_CPO_CPOREQ_MASK;
00000c  4910              LDR      r1,|L1.80|
00000e  6809              LDR      r1,[r1,#0]
000010  0849              LSRS     r1,r1,#1
000012  0049              LSLS     r1,r1,#1
000014  4a0e              LDR      r2,|L1.80|
000016  6011              STR      r1,[r2,#0]
;;;22           while (MCM_CPO & MCM_CPO_CPOACK_MASK);                
000018  bf00              NOP      
                  |L1.26|
00001a  490d              LDR      r1,|L1.80|
00001c  6809              LDR      r1,[r1,#0]
00001e  2202              MOVS     r2,#2
000020  4011              ANDS     r1,r1,r2
000022  2900              CMP      r1,#0
000024  d1f9              BNE      |L1.26|
000026  e00d              B        |L1.68|
                  |L1.40|
;;;23       } else 
;;;24       for(i= 0;i<0x1ffff;i++){
000028  2000              MOVS     r0,#0
00002a  e007              B        |L1.60|
                  |L1.44|
;;;25          if ((FGPIOA_PDIR & 0x00000010) == 0x10)   // if pin returns high stop
00002c  4909              LDR      r1,|L1.84|
00002e  6909              LDR      r1,[r1,#0x10]
000030  2210              MOVS     r2,#0x10
000032  4011              ANDS     r1,r1,r2
000034  2910              CMP      r1,#0x10
000036  d100              BNE      |L1.58|
;;;26            break;  // debounce
000038  e003              B        |L1.66|
                  |L1.58|
00003a  1c40              ADDS     r0,r0,#1              ;24
                  |L1.60|
00003c  4906              LDR      r1,|L1.88|
00003e  4288              CMP      r0,r1                 ;24
000040  dbf4              BLT      |L1.44|
                  |L1.66|
000042  bf00              NOP      
                  |L1.68|
;;;27       }
;;;28        return;  
;;;29     }
000044  4770              BX       lr
;;;30     
                          ENDP

                  enable_NMI_button PROC
;;;31     void enable_NMI_button(void)
000046  4805              LDR      r0,|L1.92|
;;;32     {
;;;33         /* Configure the PTA4 pin for its NMI function */
;;;34       
;;;35       PORTA_PCR4 =  PORT_PCR_PS_MASK |
000048  4905              LDR      r1,|L1.96|
00004a  6108              STR      r0,[r1,#0x10]
;;;36                     PORT_PCR_PE_MASK | 
;;;37                     PORT_PCR_PFE_MASK |
;;;38                     PORT_PCR_MUX(7); /* NMI Falling edge */    
;;;39        // NMI is alt7 function for this pin
;;;40         
;;;41     }
00004c  4770              BX       lr
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
                          DCD      0xf0003040
                  |L1.84|
                          DCD      0xf80ff000
                  |L1.88|
                          DCD      0x0001ffff
                  |L1.92|
                          DCD      0x00000713
                  |L1.96|
                          DCD      0x40049000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\src\\cpu\\nmi_isr_handler.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_nmi_isr_handler_c_bb8ca80c____REV16|
#line 383 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.0-Beta4\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___17_nmi_isr_handler_c_bb8ca80c____REV16| PROC
#line 384

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_nmi_isr_handler_c_bb8ca80c____REVSH|
#line 397
|__asm___17_nmi_isr_handler_c_bb8ca80c____REVSH| PROC
#line 398

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
