; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\uv4build\angle_cal.o --asm_dir=.\UV4Build\ --list_dir=.\UV4Build\ --depend=.\uv4build\angle_cal.d --cpu=Cortex-M0+ --apcs=interwork -O0 -I..\..\..\src\projects\KEIL_MAG -I..\..\..\src\common -I..\..\..\src\cpu -I..\..\..\src\cpu\headers\CMSIS\MKL26Z4\Include -I..\..\..\src\drivers\llwu -I..\..\..\src\drivers\lptmr -I..\..\..\src\drivers\mcg -I..\..\..\src\drivers\pmc -I..\..\..\src\drivers\rcm -I..\..\..\src\drivers\rtc -I..\..\..\src\drivers\smc -I..\..\..\src\drivers\uart -I..\..\..\src\drivers\cmp -I..\..\..\src\platforms -I..\.. -I..\..\..\src\cpu\CMSIS\Source -I..\..\..\src\cpu\CMSIS\Source\arm -IC:\Freescale\kl26_1\FRDM-KL26Z_SC_Rev_1.0\klxx-sc-baremetal\build\keil\KEIL_MAG\RTE -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.4.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -DMKL26Z128xxx4 -DKEIL -DFREEDOM -DCMSIS --omf_browse=.\uv4build\angle_cal.crf ..\..\..\src\common\angle_cal.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  angle_calculation PROC
;;;70     
;;;71     void angle_calculation(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;72      {
;;;73        signed int nv, x2, y2, z2;
;;;74     
;;;75      /*  if (accel_count != 0) return;
;;;76        accel_count = 60; //60 msec
;;;77        */
;;;78        
;;;79        nv = (signed char)(resultx);
000002  486c              LDR      r0,|L1.436|
000004  7800              LDRB     r0,[r0,#0]  ; resultx
000006  b247              SXTB     r7,r0
;;;80        X_acc = median(nv, &arr_medianas[0]);
000008  496b              LDR      r1,|L1.440|
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       median
000010  496a              LDR      r1,|L1.444|
000012  6008              STR      r0,[r1,#0]  ; X_acc
;;;81        
;;;82        
;;;83        nv = (signed char)(resulty);
000014  486a              LDR      r0,|L1.448|
000016  7800              LDRB     r0,[r0,#0]  ; resulty
000018  b247              SXTB     r7,r0
;;;84        Y_acc = median(nv, &arr_medianas[1]);
00001a  4967              LDR      r1,|L1.440|
00001c  3124              ADDS     r1,r1,#0x24
00001e  4638              MOV      r0,r7
000020  f7fffffe          BL       median
000024  4967              LDR      r1,|L1.452|
000026  6008              STR      r0,[r1,#0]  ; Y_acc
;;;85        
;;;86        nv = (signed char)(resultz);  
000028  4867              LDR      r0,|L1.456|
00002a  7800              LDRB     r0,[r0,#0]  ; resultz
00002c  b247              SXTB     r7,r0
;;;87        Z_acc = median(nv, &arr_medianas[2]);
00002e  4962              LDR      r1,|L1.440|
000030  3148              ADDS     r1,r1,#0x48
000032  4638              MOV      r0,r7
000034  f7fffffe          BL       median
000038  4964              LDR      r1,|L1.460|
00003a  6008              STR      r0,[r1,#0]  ; Z_acc
;;;88     
;;;89        x2        = X_acc*X_acc;
00003c  485f              LDR      r0,|L1.444|
00003e  6800              LDR      r0,[r0,#0]  ; X_acc
000040  4340              MULS     r0,r0,r0
000042  4605              MOV      r5,r0
;;;90        y2        = Y_acc*Y_acc;
000044  485f              LDR      r0,|L1.452|
000046  6800              LDR      r0,[r0,#0]  ; Y_acc
000048  4340              MULS     r0,r0,r0
00004a  4606              MOV      r6,r0
;;;91     
;;;92        xy_mag   = sqrt_16(x2 + y2);
00004c  19a8              ADDS     r0,r5,r6
00004e  f7fffffe          BL       sqrt_16
000052  495f              LDR      r1,|L1.464|
000054  6008              STR      r0,[r1,#0]  ; xy_mag
;;;93       
;;;94        if (Y_acc<0) cat = -Y_acc; else cat = Y_acc;
000056  485b              LDR      r0,|L1.452|
000058  6800              LDR      r0,[r0,#0]  ; Y_acc
00005a  2800              CMP      r0,#0
00005c  da05              BGE      |L1.106|
00005e  4859              LDR      r0,|L1.452|
000060  6800              LDR      r0,[r0,#0]  ; Y_acc
000062  4240              RSBS     r0,r0,#0
000064  495b              LDR      r1,|L1.468|
000066  6008              STR      r0,[r1,#0]  ; cat
000068  e003              B        |L1.114|
                  |L1.106|
00006a  4856              LDR      r0,|L1.452|
00006c  6800              LDR      r0,[r0,#0]  ; Y_acc
00006e  4959              LDR      r1,|L1.468|
000070  6008              STR      r0,[r1,#0]  ; cat
                  |L1.114|
;;;95        
;;;96        offset = (unsigned int)(cat<<7)/(unsigned int)xy_mag;
000072  4958              LDR      r1,|L1.468|
000074  6809              LDR      r1,[r1,#0]  ; cat
000076  01c8              LSLS     r0,r1,#7
000078  4955              LDR      r1,|L1.464|
00007a  6809              LDR      r1,[r1,#0]  ; xy_mag
00007c  f7fffffe          BL       __aeabi_uidivmod
000080  4955              LDR      r1,|L1.472|
000082  6008              STR      r0,[r1,#0]  ; offset
;;;97        if (offset>127) offset = 127;    
000084  4608              MOV      r0,r1
000086  6800              LDR      r0,[r0,#0]  ; offset
000088  287f              CMP      r0,#0x7f
00008a  d901              BLS      |L1.144|
00008c  207f              MOVS     r0,#0x7f
00008e  6008              STR      r0,[r1,#0]  ; offset
                  |L1.144|
;;;98        xy_angle = asin[offset];
000090  4851              LDR      r0,|L1.472|
000092  6800              LDR      r0,[r0,#0]  ; offset
000094  0080              LSLS     r0,r0,#2
000096  4951              LDR      r1,|L1.476|
000098  5808              LDR      r0,[r1,r0]
00009a  4951              LDR      r1,|L1.480|
00009c  6008              STR      r0,[r1,#0]  ; xy_angle
;;;99        
;;;100       if (Y_acc>0)  xy_angle = -xy_angle;
00009e  4849              LDR      r0,|L1.452|
0000a0  6800              LDR      r0,[r0,#0]  ; Y_acc
0000a2  2800              CMP      r0,#0
0000a4  dd03              BLE      |L1.174|
0000a6  4608              MOV      r0,r1
0000a8  6800              LDR      r0,[r0,#0]  ; xy_angle
0000aa  4240              RSBS     r0,r0,#0
0000ac  6008              STR      r0,[r1,#0]  ; xy_angle
                  |L1.174|
;;;101       
;;;102     
;;;103       /////////   
;;;104       
;;;105       z2        = Z_acc*Z_acc;   
0000ae  4847              LDR      r0,|L1.460|
0000b0  6800              LDR      r0,[r0,#0]  ; Z_acc
0000b2  4604              MOV      r4,r0
0000b4  4344              MULS     r4,r0,r4
;;;106       xz_mag    = sqrt_16(x2 + z2);
0000b6  1928              ADDS     r0,r5,r4
0000b8  f7fffffe          BL       sqrt_16
0000bc  4949              LDR      r1,|L1.484|
0000be  6008              STR      r0,[r1,#0]  ; xz_mag
;;;107       if (X_acc<0) cat = -X_acc; else cat = X_acc;
0000c0  483e              LDR      r0,|L1.444|
0000c2  6800              LDR      r0,[r0,#0]  ; X_acc
0000c4  2800              CMP      r0,#0
0000c6  da05              BGE      |L1.212|
0000c8  483c              LDR      r0,|L1.444|
0000ca  6800              LDR      r0,[r0,#0]  ; X_acc
0000cc  4240              RSBS     r0,r0,#0
0000ce  4941              LDR      r1,|L1.468|
0000d0  6008              STR      r0,[r1,#0]  ; cat
0000d2  e003              B        |L1.220|
                  |L1.212|
0000d4  4839              LDR      r0,|L1.444|
0000d6  6800              LDR      r0,[r0,#0]  ; X_acc
0000d8  493e              LDR      r1,|L1.468|
0000da  6008              STR      r0,[r1,#0]  ; cat
                  |L1.220|
;;;108       offset = (unsigned int)(cat<<7)/(unsigned int)xz_mag;
0000dc  493d              LDR      r1,|L1.468|
0000de  6809              LDR      r1,[r1,#0]  ; cat
0000e0  01c8              LSLS     r0,r1,#7
0000e2  4940              LDR      r1,|L1.484|
0000e4  6809              LDR      r1,[r1,#0]  ; xz_mag
0000e6  f7fffffe          BL       __aeabi_uidivmod
0000ea  493b              LDR      r1,|L1.472|
0000ec  6008              STR      r0,[r1,#0]  ; offset
;;;109       if (offset>127) offset = 127;    
0000ee  4608              MOV      r0,r1
0000f0  6800              LDR      r0,[r0,#0]  ; offset
0000f2  287f              CMP      r0,#0x7f
0000f4  d901              BLS      |L1.250|
0000f6  207f              MOVS     r0,#0x7f
0000f8  6008              STR      r0,[r1,#0]  ; offset
                  |L1.250|
;;;110       xz_angle = asin[offset];
0000fa  4837              LDR      r0,|L1.472|
0000fc  6800              LDR      r0,[r0,#0]  ; offset
0000fe  0080              LSLS     r0,r0,#2
000100  4936              LDR      r1,|L1.476|
000102  5808              LDR      r0,[r1,r0]
000104  4938              LDR      r1,|L1.488|
000106  6008              STR      r0,[r1,#0]  ; xz_angle
;;;111       
;;;112       if (X_acc>0)  xz_angle = -xz_angle;
000108  482c              LDR      r0,|L1.444|
00010a  6800              LDR      r0,[r0,#0]  ; X_acc
00010c  2800              CMP      r0,#0
00010e  dd03              BLE      |L1.280|
000110  4608              MOV      r0,r1
000112  6800              LDR      r0,[r0,#0]  ; xz_angle
000114  4240              RSBS     r0,r0,#0
000116  6008              STR      r0,[r1,#0]  ; xz_angle
                  |L1.280|
;;;113       
;;;114    
;;;115       yz_mag    = sqrt_16(y2 + z2);
000118  1930              ADDS     r0,r6,r4
00011a  f7fffffe          BL       sqrt_16
00011e  4933              LDR      r1,|L1.492|
000120  6008              STR      r0,[r1,#0]  ; yz_mag
;;;116       if (Y_acc<0) cat = -Y_acc; else cat = Y_acc;
000122  4828              LDR      r0,|L1.452|
000124  6800              LDR      r0,[r0,#0]  ; Y_acc
000126  2800              CMP      r0,#0
000128  da05              BGE      |L1.310|
00012a  4826              LDR      r0,|L1.452|
00012c  6800              LDR      r0,[r0,#0]  ; Y_acc
00012e  4240              RSBS     r0,r0,#0
000130  4928              LDR      r1,|L1.468|
000132  6008              STR      r0,[r1,#0]  ; cat
000134  e003              B        |L1.318|
                  |L1.310|
000136  4823              LDR      r0,|L1.452|
000138  6800              LDR      r0,[r0,#0]  ; Y_acc
00013a  4926              LDR      r1,|L1.468|
00013c  6008              STR      r0,[r1,#0]  ; cat
                  |L1.318|
;;;117       offset = (unsigned int)(cat<<7)/(unsigned int)yz_mag;
00013e  4925              LDR      r1,|L1.468|
000140  6809              LDR      r1,[r1,#0]  ; cat
000142  01c8              LSLS     r0,r1,#7
000144  4929              LDR      r1,|L1.492|
000146  6809              LDR      r1,[r1,#0]  ; yz_mag
000148  f7fffffe          BL       __aeabi_uidivmod
00014c  4922              LDR      r1,|L1.472|
00014e  6008              STR      r0,[r1,#0]  ; offset
;;;118       if (offset>127) offset = 127;    
000150  4608              MOV      r0,r1
000152  6800              LDR      r0,[r0,#0]  ; offset
000154  287f              CMP      r0,#0x7f
000156  d901              BLS      |L1.348|
000158  207f              MOVS     r0,#0x7f
00015a  6008              STR      r0,[r1,#0]  ; offset
                  |L1.348|
;;;119       yz_angle = asin[offset];
00015c  481e              LDR      r0,|L1.472|
00015e  6800              LDR      r0,[r0,#0]  ; offset
000160  0080              LSLS     r0,r0,#2
000162  491e              LDR      r1,|L1.476|
000164  5808              LDR      r0,[r1,r0]
000166  4922              LDR      r1,|L1.496|
000168  6008              STR      r0,[r1,#0]  ; yz_angle
;;;120       if (Y_acc>0)  yz_angle = -yz_angle;
00016a  4816              LDR      r0,|L1.452|
00016c  6800              LDR      r0,[r0,#0]  ; Y_acc
00016e  2800              CMP      r0,#0
000170  dd03              BLE      |L1.378|
000172  4608              MOV      r0,r1
000174  6800              LDR      r0,[r0,#0]  ; yz_angle
000176  4240              RSBS     r0,r0,#0
000178  6008              STR      r0,[r1,#0]  ; yz_angle
                  |L1.378|
;;;121        
;;;122     }
00017a  bdf8              POP      {r3-r7,pc}
;;;123    
                          ENDP

                  detect_fall_detection PROC
;;;126    #define FALL_LIMIT  45//50
;;;127    void detect_fall_detection(void)
00017c  4814              LDR      r0,|L1.464|
;;;128    {
;;;129       if (xy_mag<FALL_LIMIT && xz_mag < FALL_LIMIT && yz_mag < FALL_LIMIT  && !ti_fall) 
00017e  6800              LDR      r0,[r0,#0]  ; xy_mag
000180  282d              CMP      r0,#0x2d
000182  d20f              BCS      |L1.420|
000184  4817              LDR      r0,|L1.484|
000186  6800              LDR      r0,[r0,#0]  ; xz_mag
000188  282d              CMP      r0,#0x2d
00018a  d20b              BCS      |L1.420|
00018c  4817              LDR      r0,|L1.492|
00018e  6800              LDR      r0,[r0,#0]  ; yz_mag
000190  282d              CMP      r0,#0x2d
000192  d207              BCS      |L1.420|
000194  4817              LDR      r0,|L1.500|
000196  8800              LDRH     r0,[r0,#0]  ; ti_fall
000198  2800              CMP      r0,#0
00019a  d103              BNE      |L1.420|
;;;130        fall_input=1;
00019c  2001              MOVS     r0,#1
00019e  4916              LDR      r1,|L1.504|
0001a0  7008              STRB     r0,[r1,#0]
0001a2  e005              B        |L1.432|
                  |L1.420|
;;;131       else 
;;;132       {
;;;133         fall_input = 0;
0001a4  2000              MOVS     r0,#0
0001a6  4914              LDR      r1,|L1.504|
0001a8  7008              STRB     r0,[r1,#0]
;;;134         ti_fall = 10;
0001aa  200a              MOVS     r0,#0xa
0001ac  4911              LDR      r1,|L1.500|
0001ae  8008              STRH     r0,[r1,#0]
                  |L1.432|
;;;135        }
;;;136       
;;;137    }
0001b0  4770              BX       lr
                          ENDP

0001b2  0000              DCW      0x0000
                  |L1.436|
                          DCD      resultx
                  |L1.440|
                          DCD      arr_medianas
                  |L1.444|
                          DCD      X_acc
                  |L1.448|
                          DCD      resulty
                  |L1.452|
                          DCD      Y_acc
                  |L1.456|
                          DCD      resultz
                  |L1.460|
                          DCD      Z_acc
                  |L1.464|
                          DCD      xy_mag
                  |L1.468|
                          DCD      ||cat||
                  |L1.472|
                          DCD      offset
                  |L1.476|
                          DCD      asin
                  |L1.480|
                          DCD      xy_angle
                  |L1.484|
                          DCD      xz_mag
                  |L1.488|
                          DCD      xz_angle
                  |L1.492|
                          DCD      yz_mag
                  |L1.496|
                          DCD      yz_angle
                  |L1.500|
                          DCD      ti_fall
                  |L1.504|
                          DCD      fall_input

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  arr_medianas
                          %        108

                          AREA ||.data||, DATA, ALIGN=2

                  pit1_isrv_count
000000  0000              DCB      0x00,0x00
                  base_time125m
000002  0000              DCB      0x00,0x00
                  ti_task
000004  0000              DCB      0x00,0x00
                  ti_fall
000006  0000              DCB      0x00,0x00
                  ti_accel_sampling
000008  0000              DCB      0x00,0x00
                  ti_delay
00000a  0000              DCB      0x00,0x00
                  ti_print
00000c  0000              DCB      0x00,0x00
                  ti_console
00000e  0000              DCB      0x00,0x00
                  ti_led
000010  0000              DCB      0x00,0x00
                  ti_tsi0
000012  0000              DCB      0x00,0x00
                  ti_tsi1
000014  0000              DCB      0x00,0x00
                  ti_test_adc
000016  0000              DCB      0x00,0x00
                  adc_sample
000018  00000000          DCB      0x00,0x00,0x00,0x00
                  X_acc
                          DCD      0x00000000
                  Y_acc
                          DCD      0x00000000
                  Z_acc
                          DCD      0x00000000
                  xy_mag
                          DCD      0x00000000
                  xz_mag
                          DCD      0x00000000
                  yz_mag
                          DCD      0x00000000
                  xy_angle
                          DCD      0x00000000
                  xz_angle
                          DCD      0x00000000
                  yz_angle
                          DCD      0x00000000
                  ||cat||
                          DCD      0x00000000
                  offset
                          DCD      0x00000000
                  fall_input
000048  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\src\\common\\angle_cal.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_angle_cal_c_9b6b368d____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_angle_cal_c_9b6b368d____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_angle_cal_c_9b6b368d____REVSH|
#line 144
|__asm___11_angle_cal_c_9b6b368d____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
